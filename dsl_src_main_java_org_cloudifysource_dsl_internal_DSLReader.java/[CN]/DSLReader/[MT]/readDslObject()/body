{
  try {
    init();
  }
 catch (  final IOException e) {
    throw new DSLException("Failed to initialize DSL Reader: " + e.getMessage(),e);
  }
  LinkedHashMap<Object,Object> properties=null;
  try {
    properties=createDSLProperties();
  }
 catch (  final Exception e) {
    throw new IllegalArgumentException("Failed to load properties file " + this.propertiesFile,e);
  }
  ClusterInfo clusterInfoToUseInGsc=this.clusterInfo;
  if (clusterInfoToUseInGsc == null) {
    clusterInfoToUseInGsc=new ClusterInfo(null,1,0,1,0);
  }
  if (this.createServiceContext) {
    if (isRunningInGSC) {
      this.context=new ServiceContextImpl(clusterInfoToUseInGsc);
    }
 else {
      this.context=new ServiceContextImpl(new ClusterInfo(null,1,0,1,0));
    }
  }
  final GroovyShell gs=createGroovyShell(properties);
  final Object result=evaluateGroovyScript(gs);
  if (this.createServiceContext) {
    if (!(result instanceof Service)) {
      throw new IllegalArgumentException("The DSL reader cannot create a service context to a DSL that does not evaluate to a Sevice. " + "Set the 'createServiceContext' option to false if you do not need a service conext");
    }
    if (isRunningInGSC) {
      if (clusterInfoToUseInGsc.getName() == null) {
        clusterInfoToUseInGsc.setName(ServiceUtils.getAbsolutePUName(CloudifyConstants.DEFAULT_APPLICATION_NAME,((Service)result).getName()));
      }
      this.context.init((Service)result,admin,workDir.getAbsolutePath(),clusterInfoToUseInGsc);
    }
 else {
      this.context.initInIntegratedContainer((Service)result,workDir.getAbsolutePath());
    }
  }
  return result;
}
