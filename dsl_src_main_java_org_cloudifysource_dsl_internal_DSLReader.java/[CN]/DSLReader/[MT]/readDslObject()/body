{
  try {
    init();
  }
 catch (  final IOException e) {
    throw new DSLException("Failed to initialize DSL Reader: " + e.getMessage(),e);
  }
  LinkedHashMap<Object,Object> properties=null;
  try {
    properties=createDSLProperties();
    createDSLOverrides(overridesFile,overrideProperties);
    overrideProperties(properties);
    addApplicationProperties(properties);
  }
 catch (  final Exception e) {
    throw new IllegalArgumentException("Failed to load properties file " + this.propertiesFile.getName() + ": "+ e.getMessage(),e);
  }
  if (this.variables != null) {
    properties.putAll(this.variables);
  }
  ClusterInfo clusterInfoToUseInGsc=this.clusterInfo;
  if (clusterInfoToUseInGsc == null) {
    clusterInfoToUseInGsc=new ClusterInfo(null,1,0,1,0);
  }
  if (this.createServiceContext) {
    if (this.context == null) {
      if (isRunningInGSC) {
        this.context=new ServiceContextImpl(clusterInfoToUseInGsc,workDir.getAbsolutePath());
      }
 else {
        this.context=new ServiceContextImpl(new ClusterInfo(null,1,0,1,0),workDir.getAbsolutePath());
      }
    }
  }
  final GroovyShell gs=createGroovyShell(properties);
  final Object result=evaluateGroovyScript(gs);
  if (result == null) {
    throw new DSLException("The DSL evaluated to a null - check your syntax and try again");
  }
  if (this.createServiceContext) {
    if (!(result instanceof Service)) {
      throw new IllegalArgumentException("The DSL reader cannot create a service context to a DSL that does not evaluate to a Service. " + "Set the 'createServiceContext' option to false if you do not need a service conext");
    }
    if (isRunningInGSC) {
      if (clusterInfoToUseInGsc.getName() == null) {
        clusterInfoToUseInGsc.setName(ServiceUtils.getAbsolutePUName(CloudifyConstants.DEFAULT_APPLICATION_NAME,((Service)result).getName()));
      }
      this.context.init((Service)result,admin,clusterInfoToUseInGsc);
    }
 else {
      this.context.initInIntegratedContainer((Service)result);
    }
  }
  return result;
}
