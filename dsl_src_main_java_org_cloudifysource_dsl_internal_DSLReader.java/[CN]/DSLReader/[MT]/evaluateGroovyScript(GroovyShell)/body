{
  Object result=null;
  if (this.dslContents == null) {
    SequenceInputStream sis=null;
    try {
      final FileInputStream fis=new FileInputStream(dslFile);
      final ByteArrayInputStream bis=new ByteArrayInputStream(GROOVY_SERVICE_PREFIX.getBytes());
      sis=new SequenceInputStream(bis,fis);
      result=gs.evaluate(sis,"dslEntity");
    }
 catch (    final IOException e) {
      throw new IllegalStateException("The file " + dslFile + " could not be read",e);
    }
catch (    final MissingMethodException e) {
      throw new IllegalArgumentException("Could not resolve DSL entry with name: " + e.getMethod(),e);
    }
catch (    final MissingPropertyException e) {
      throw new IllegalArgumentException("Could not resolve DSL entry with name: " + e.getProperty(),e);
    }
catch (    final DSLValidationRuntimeException e) {
      throw e.getDSLValidationException();
    }
 finally {
      if (sis != null) {
        try {
          sis.close();
        }
 catch (        final IOException e) {
        }
      }
    }
  }
 else {
    try {
      result=gs.evaluate(this.dslContents,"dslEntity");
    }
 catch (    final CompilationFailedException e) {
      throw new IllegalArgumentException("The file " + dslFile + " could not be compiled",e);
    }
  }
  return result;
}
