{
  if (timeoutInMinutes < 0) {
    throw new CLIException("-timeout cannot be negative");
  }
  if (progressInMinutes < 1) {
    throw new CLIException("-progress must be positive");
  }
  if (timeoutInMinutes > 0 && timeoutInMinutes < progressInMinutes) {
    throw new CLIException("-timeout must be bigger than -progress");
  }
  long end=System.currentTimeMillis() + TimeUnit.MINUTES.toMillis(timeoutInMinutes);
  Properties properties=AzureUtils.getAzureProperties();
  String subscriptionId=AzureUtils.getProperty(properties,"subscriptionId");
  String certificateThumbprint=AzureUtils.getProperty(properties,"certificateThumbprint");
  AzureDeploymentWrapper azureDeploymentWrapper=new AzureDeploymentWrapper();
  azureDeploymentWrapper.setVerbose(verbose);
  azureDeploymentWrapper.setProgressInMinutes(progressInMinutes);
  azureDeploymentWrapper.setAzureHostedServiceName(azureHostedServiceName);
  azureDeploymentWrapper.setAzureDeploymentSlotName(azureDeploymentSlotName);
  azureDeploymentWrapper.setCertificateThumbprint(certificateThumbprint);
  azureDeploymentWrapper.setSubscriptionId(subscriptionId);
  azureDeploymentWrapper.setTimeoutErrorMessage(TIMEOUT_ERROR_STRING);
  AzureDeploymentConfigurationFile configFile=azureDeploymentWrapper.getDeploymentConfig();
  configFile.setNumberOfInstances(roleName,instances);
  configFile.flush();
  azureDeploymentWrapper.updateDeploymentConfig(configFile);
  if (timeoutInMinutes == 0) {
    return roleName + " update to " + instances+ " instances is in progress";
  }
  logger.info(ShellUtils.getExpectedExecutionTimeMessage());
  azureDeploymentWrapper.waitForAzureDeploymentStatus(AzureDeploymentStatus.RUNNING,ShellUtils.millisUntil(TIMEOUT_ERROR_STRING,end),TimeUnit.MILLISECONDS);
  if (!adminFacade.isConnected()) {
    azureDeploymentWrapper.connect(adminFacade);
  }
  String applicationName=tryGetInstalledApplicationName();
  if (applicationName != null) {
    azureDeploymentWrapper.waitForNumberOfMachines(adminFacade,applicationName,roleName,instances,ShellUtils.millisUntil(TIMEOUT_ERROR_STRING,end),TimeUnit.MILLISECONDS);
  }
  return roleName + " updated to " + instances+ " instances.";
}
