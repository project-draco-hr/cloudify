{
  ProcessingUnitInstance pui=null;
  for (  final ProcessingUnitInstance instance : pu.getInstances()) {
    if (instance.getGridServiceContainer() != null && instance.getGridServiceContainer().getGridServiceAgent() != null && instance.getGridServiceContainer().getGridServiceAgent().equals(agent)) {
      pui=instance;
    }
  }
  if (pui == null) {
    throw new IllegalStateException("Failed finding " + pu.getName() + " on "+ agent.getMachine().getHostAddress());
  }
  final Map<String,ServiceDetails> alldetails=pui.getServiceDetailsByServiceId();
  String protocol=IPUtils.getRestProtocol();
  final ServiceDetails details=alldetails.get("jee-container");
  final String host=details.getAttributes().get("host").toString();
  final int port=Integer.parseInt(details.getAttributes().get("port").toString());
  final String ctx=details.getAttributes().get("context-path").toString();
  try {
    return new URL(protocol,host,port,ctx);
  }
 catch (  final MalformedURLException e) {
    throw new IllegalStateException(e);
  }
}
