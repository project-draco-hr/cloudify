{
  final Client client=Client.create();
  if (WIRE_LOGGER.isLoggable(Level.FINE)) {
    this.serviceClient.addFilter(new LoggingFilter(WIRE_LOGGER));
  }
  try {
    if (logger.isLoggable(Level.FINE)) {
      logger.fine("Request openstack " + this.getServiceType() + " new token.");
    }
    final WebResource webResource=client.resource(this.endpoint);
    final String tokenJsonRequest="{\"auth\":{\"passwordCredentials\":" + "{\"username\": \"%s\", \"password\":\"%s\"}, \"tenantName\":\"%s\"}}";
    final String input=String.format(tokenJsonRequest,username,password,tenant);
    final String response=webResource.path("tokens").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(String.class,input);
    this.token=JsonUtils.unwrapRootToObject(TokenAccess.class,response,false);
  }
  finally {
    if (client != null) {
      client.destroy();
    }
  }
}
