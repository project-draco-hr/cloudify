{
  final File testParsingBaseDslFile=new File(TEST_PARSING_RESOURCE_PATH + "test_parsing_autoscaling-service.groovy");
  final File testParsingBaseWorkDir=new File(TEST_PARSING_RESOURCE_PATH);
  final Service service=ServiceReader.getServiceFromFile(testParsingBaseDslFile,testParsingBaseWorkDir).getService();
  Assert.assertTrue(service.getMinAllowedInstances() > 1);
  Assert.assertTrue(service.getNumInstances() >= service.getMinAllowedInstances());
  Assert.assertTrue(service.getMaxAllowedInstances() >= service.getNumInstances());
  Assert.assertEquals(1,service.getScaleInCooldownInSeconds());
  Assert.assertEquals(1,service.getScaleOutCooldownInSeconds());
  Assert.assertEquals(1,service.getScaleCooldownInSeconds());
  Assert.assertNotNull(service.getSamplingPeriodInSeconds());
  Assert.assertEquals("scalingRules",service.getName());
  List<ServiceStatisticsDetails> serviceStatistics=service.getServiceStatistics();
  Assert.assertEquals(1,serviceStatistics.size());
  Assert.assertNotNull(serviceStatistics.get(0));
  String servicestatisticsName=serviceStatistics.get(0).getName();
  Assert.assertNotNull(serviceStatistics.get(0).getMetric());
  Assert.assertNotNull(serviceStatistics.get(0).getInstancesStatistics());
  Assert.assertNotNull(serviceStatistics.get(0).getTimeStatistics());
  Assert.assertNotNull(serviceStatistics.get(0).getMovingTimeRangeInSeconds());
  List<PerInstanceStatisticsDetails> perInstanceStatistics=service.getPerInstanceStatistics();
  Assert.assertEquals(1,perInstanceStatistics.size());
  Assert.assertNotNull(perInstanceStatistics.get(0));
  Assert.assertNotNull(perInstanceStatistics.get(0).getMetric());
  Assert.assertNotNull(perInstanceStatistics.get(0).getInstancesStatistics());
  Assert.assertNotNull(perInstanceStatistics.get(0).getTimeStatistics());
  Assert.assertNotNull(perInstanceStatistics.get(0).getMovingTimeRangeInSeconds());
  List<ScalingRuleDetails> scalingRules=service.getScalingRules();
  Assert.assertNotNull(scalingRules);
  Assert.assertEquals(2,scalingRules.size());
  Assert.assertNotNull(scalingRules.get(0).getHighThreshold());
  Assert.assertNotNull(scalingRules.get(0).getLowThreshold());
  Assert.assertEquals(servicestatisticsName,scalingRules.get(0).getServiceStatistics());
  HighThresholdDetails highThreshold=scalingRules.get(0).getHighThreshold();
  Assert.assertNotNull(highThreshold.getValue());
  Assert.assertNotNull(highThreshold.getInstancesIncrease());
  LowThresholdDetails lowThreshold=scalingRules.get(0).getLowThreshold();
  Assert.assertNotNull(lowThreshold.getValue());
  Assert.assertNotNull(lowThreshold.getInstancesDecrease());
  Assert.assertEquals(((ServiceStatisticsDetails)scalingRules.get(1).getServiceStatistics()).getMetric(),serviceStatistics.get(0).getMetric());
  Assert.assertEquals(((ServiceStatisticsDetails)scalingRules.get(1).getServiceStatistics()).getInstancesStatistics().createInstancesStatistics(),serviceStatistics.get(0).getInstancesStatistics().createInstancesStatistics());
  Assert.assertEquals(((ServiceStatisticsDetails)scalingRules.get(1).getServiceStatistics()).getTimeStatistics().createTimeWindowStatistics(1,TimeUnit.MINUTES),serviceStatistics.get(0).getTimeStatistics().createTimeWindowStatistics(1,TimeUnit.MINUTES));
  Assert.assertEquals(((ServiceStatisticsDetails)scalingRules.get(1).getServiceStatistics()).getMovingTimeRangeInSeconds(),serviceStatistics.get(0).getMovingTimeRangeInSeconds());
  Assert.assertNotNull(scalingRules.get(1).getHighThreshold());
  Assert.assertNotNull(scalingRules.get(1).getLowThreshold());
}
