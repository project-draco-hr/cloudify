{
  File[] actualTemplatesDslFiles={templatesFileOrDir};
  if (templatesFileOrDir.isFile()) {
    if (templatesFileOrDir.getName().endsWith(".zip") || templatesFileOrDir.getName().endsWith(".jar")) {
      final File tempFolder=ServiceReader.unzipApplicationFile(templatesFileOrDir,"templates");
      actualTemplatesDslFiles=DSLReader.findDefaultDSLFiles(DSLUtils.TEMPLATES_DSL_FILE_NAME_SUFFIX,tempFolder);
    }
  }
 else {
    actualTemplatesDslFiles=DSLReader.findDefaultDSLFiles(DSLUtils.TEMPLATES_DSL_FILE_NAME_SUFFIX,templatesFileOrDir);
  }
  List<CloudTemplateHolder> cloudTemplatesList=new LinkedList<CloudTemplateHolder>();
  for (  File actualTemplatesDslFile : actualTemplatesDslFiles) {
    DSLReader dslReader=new DSLReader();
    dslReader.setDslFile(actualTemplatesDslFile);
    dslReader.setCreateServiceContext(false);
    Map<String,CloudTemplate> cloudTemplateMap=dslReader.readDslEntity(Map.class);
    for (    Entry<String,CloudTemplate> entry : cloudTemplateMap.entrySet()) {
      CloudTemplateHolder holder=new CloudTemplateHolder();
      holder.setName(entry.getKey());
      holder.setCloudTemplate(entry.getValue());
      cloudTemplatesList.add(holder);
    }
  }
  return cloudTemplatesList;
}
