{
  if (!recipe.exists()) {
    throw new CLIStatusException("service_file_doesnt_exist",recipe.getPath());
  }
  File packedFile;
  Service service=null;
  try {
    if (recipe.getName().endsWith(".jar") || recipe.getName().endsWith(".war")) {
      packedFile=recipe;
    }
 else     if (recipe.isDirectory()) {
      if (serviceFileName != null) {
        File fullPathToRecipe=new File(recipe.getAbsolutePath() + "/" + serviceFileName);
        if (!fullPathToRecipe.exists()) {
          throw new CLIStatusException("service_file_doesnt_exist",fullPathToRecipe.getPath());
        }
        packedFile=Packager.pack(fullPathToRecipe);
        service=ServiceReader.readService(fullPathToRecipe);
      }
 else {
        packedFile=Packager.pack(recipe);
        service=ServiceReader.readService(recipe);
      }
      packedFile.deleteOnExit();
    }
 else {
      packedFile=recipe;
      service=ServiceReader.readServiceFromZip(packedFile,CloudifyConstants.DEFAULT_APPLICATION_NAME);
    }
  }
 catch (  final IOException e) {
    throw new CLIException(e);
  }
catch (  final PackagingException e) {
    throw new CLIException(e);
  }
  final String currentApplicationName=getCurrentApplicationName();
  Properties props=null;
  if (service != null) {
    props=createServiceContextProperties(service);
    if (serviceFileName != null) {
      props.setProperty(CloudifyConstants.CONTEXT_PROPERTY_SERVICE_FILE_NAME,serviceFileName);
    }
    if (serviceName == null || serviceName.isEmpty()) {
      serviceName=service.getName();
    }
  }
  if (serviceName == null || serviceName.isEmpty()) {
    serviceName=recipe.getName();
    final int endIndex=serviceName.lastIndexOf('.');
    if (endIndex > 0) {
      serviceName=serviceName.substring(0,endIndex);
    }
  }
  if (zone == null || zone.isEmpty()) {
    zone=serviceName;
  }
  String templateName;
  if (service == null || service.getCompute() == null) {
    templateName="";
  }
 else {
    templateName=service.getCompute().getTemplate();
    if (templateName == null) {
      templateName="";
    }
  }
  String lifecycleEventContainerPollingID=adminFacade.installElastic(packedFile,currentApplicationName,serviceName,zone,props,templateName,timeoutInMinutes);
  if (lifecycleEventContainerPollingID != null) {
    RestLifecycleEventsLatch lifecycleEventsPollingLatch=this.adminFacade.getLifecycleEventsPollingLatch(lifecycleEventContainerPollingID,TIMEOUT_ERROR_MESSAGE);
    boolean isDone=false;
    boolean continues=false;
    while (!isDone) {
      try {
        if (!continues) {
          lifecycleEventsPollingLatch.waitForLifecycleEvents(timeoutInMinutes,TimeUnit.MINUTES);
        }
 else {
          lifecycleEventsPollingLatch.continueWaitForLifecycleEvents(timeoutInMinutes,TimeUnit.MINUTES);
        }
        isDone=true;
      }
 catch (      TimeoutException e) {
        if (!(Boolean)session.get(Constants.INTERACTIVE_MODE)) {
          throw e;
        }
        boolean continueInstallation=promptWouldYouLikeToContinueQuestion();
        if (!continueInstallation) {
          throw new CLIStatusException(e,"service_installation_timed_out_on_client",serviceName);
        }
 else {
          continues=true;
        }
      }
    }
  }
 else {
    throw new CLIException("Failed to retrieve lifecycle logs from rest. " + "Check logs for more details.");
  }
  if (recipe.isDirectory()) {
    FileUtils.deleteQuietly(packedFile.getParentFile());
  }
  return getFormattedMessage("service_install_ended",Color.GREEN,serviceName);
}
