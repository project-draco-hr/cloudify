{
  if (!serviceFile.exists()) {
    throw new CLIStatusException("service_file_doesnt_exist",serviceFile.getPath());
  }
  File packedFile;
  int plannedNumberOfInstances=1;
  Service service=null;
  try {
    if (serviceFile.getName().endsWith(".jar") || serviceFile.getName().endsWith(".war")) {
      packedFile=serviceFile;
    }
 else     if (serviceFile.isDirectory()) {
      packedFile=Packager.pack(serviceFile);
      packedFile.deleteOnExit();
      service=ServiceReader.readService(serviceFile);
    }
 else {
      packedFile=serviceFile;
      service=ServiceReader.readServiceFromZip(packedFile,CloudifyConstants.DEFAULT_APPLICATION_NAME);
    }
  }
 catch (  final IOException e) {
    throw new CLIException(e);
  }
catch (  final PackagingException e) {
    throw new CLIException(e);
  }
  final String currentApplicationName=getCurrentApplicationName();
  Properties props=null;
  if (service != null) {
    props=createServiceContextProperties(service);
    plannedNumberOfInstances=service.getNumInstances();
    if (serviceName == null || serviceName.length() == 0) {
      serviceName=service.getName();
    }
  }
  if (serviceName == null || serviceName.length() == 0) {
    serviceName=serviceFile.getName();
    final int endIndex=serviceName.lastIndexOf('.');
    if (endIndex > 0) {
      serviceName=serviceName.substring(0,endIndex);
    }
  }
  if (zone == null || zone.length() == 0) {
    zone=serviceName;
  }
  String templateName=null;
  if (service != null && service.getCompute() != null) {
    templateName=service.getCompute().getTemplate();
    if (templateName == null) {
      templateName="";
    }
  }
 else {
    templateName="";
  }
  String lifecycleEventContainerPollingID=adminFacade.installElastic(packedFile,currentApplicationName,serviceName,zone,props,templateName,timeoutInMinutes);
  if (lifecycleEventContainerPollingID != null) {
    this.adminFacade.waitForLifecycleEvents(lifecycleEventContainerPollingID,timeoutInMinutes,TIMEOUT_ERROR_MESSAGE);
  }
 else {
    throw new CLIException("Failed to retrieve lifecycle logs from rest. " + "Check logs for more details.");
  }
  if (serviceFile.isDirectory()) {
    FileUtils.deleteQuietly(packedFile.getParentFile());
  }
  return getFormattedMessage("service_install_ended",Color.GREEN,serviceName);
}
