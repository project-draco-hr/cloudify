{
  final Set<Long> childrenAfter=procTree.get(this.myPid);
  if (childrenAfter == null) {
    throw new USMException("Could not find container process (" + this.myPid + ") in generated process tree");
  }
  childrenAfter.removeAll(childrenBefore);
  if (childrenAfter.isEmpty()) {
    logger.warning("Default process locator could not find a new process! " + "Are you running your service as a background process or a system service?");
  }
  if (childrenAfter.size() > 1) {
    logger.warning("Multiple new processes have been found: " + childrenAfter.toString() + ". Using the first as child process ID!");
  }
  final long newChildProcessID=childrenAfter.iterator().next();
  return newChildProcessID;
}
