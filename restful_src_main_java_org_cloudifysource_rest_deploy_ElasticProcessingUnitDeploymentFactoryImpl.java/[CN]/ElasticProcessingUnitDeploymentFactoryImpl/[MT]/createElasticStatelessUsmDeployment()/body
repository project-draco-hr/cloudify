{
  final ElasticStatelessProcessingUnitDeployment deployment=new ElasticStatelessProcessingUnitDeployment(deploymentConfig.getPackedFile());
  addSharedDeploymentParameters(deployment);
  deployment.addContextProperty(CloudifyConstants.CONTEXT_PROPERTY_ASYNC_INSTALL,"true");
  if (!deploymentConfig.getInstallRequest().getSelfHealing()) {
    deployment.addContextProperty(CloudifyConstants.CONTEXT_PROPERTY_DISABLE_SELF_HEALING,"false");
  }
  final Service service=deploymentConfig.getService();
  final boolean scalingRulesDefined=service.getScalingRules() == null;
  if (!isLocalcloud()) {
    boolean dedicated=IsolationUtils.isDedicated(service);
    long cloudExternalProcessMemoryInMB;
    logger.info("setting deployment memory capacity for container according to isolation method");
    if (dedicated) {
      cloudExternalProcessMemoryInMB=calculateExternalProcessMemory();
    }
 else {
      cloudExternalProcessMemoryInMB=IsolationUtils.getInstanceMemoryMB(service);
    }
    deployment.memoryCapacityPerContainer((int)cloudExternalProcessMemoryInMB,MemoryUnit.MEGABYTES);
    if (scalingRulesDefined) {
      final AutomaticCapacityScaleConfig scaleConfig=ElasticScaleConfigFactory.createAutomaticCapacityScaleConfig(deploymentConfig.getAbsolutePUName(),service,(int)cloudExternalProcessMemoryInMB,service.isLocationAware(),dedicated);
      deployment.scale(scaleConfig);
    }
 else {
      final int totalMemoryInMB=(int)cloudExternalProcessMemoryInMB * deploymentConfig.getService().getNumInstances();
      final double totalCpuCores=calculateTotalCpuCores(service);
      final ManualCapacityScaleConfig scaleConfig=ElasticScaleConfigFactory.createManualCapacityScaleConfig(totalMemoryInMB,totalCpuCores,service.isLocationAware(),dedicated);
      deployment.scale(scaleConfig);
    }
  }
 else {
    final int externalProcessMemoryInMB=512;
    deployment.memoryCapacityPerContainer(externalProcessMemoryInMB,MemoryUnit.MEGABYTES);
    if (scalingRulesDefined) {
      final AutomaticCapacityScaleConfig scaleConfig=ElasticScaleConfigFactory.createAutomaticCapacityScaleConfig(deploymentConfig.getAbsolutePUName(),service,externalProcessMemoryInMB,false,false);
      deployment.scale(scaleConfig);
    }
 else {
      final int containerMemoryInMB=128;
      deployment.scale(new ManualCapacityScaleConfigurer().memoryCapacity(containerMemoryInMB * deploymentConfig.getService().getNumInstances(),MemoryUnit.MEGABYTES).create());
    }
  }
  return deployment;
}
