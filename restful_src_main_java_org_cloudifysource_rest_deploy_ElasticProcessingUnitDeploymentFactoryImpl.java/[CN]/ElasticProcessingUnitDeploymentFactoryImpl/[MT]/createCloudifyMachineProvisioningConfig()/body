{
  final Cloud cloud=deploymentDetails.getCloud();
  final String serviceTemplateName=deploymentDetails.getTemplateName();
  final String managementMachineTemplateName=cloud.getConfiguration().getManagementMachineTemplate();
  final Map<String,ComputeTemplate> templates=cloud.getCloudCompute().getTemplates();
  final ComputeTemplate serviceTemplate=templates.get(serviceTemplateName);
  final ComputeTemplate managementTemplate=templates.get(managementMachineTemplateName);
  String storageTemplate=null;
  if (deploymentDetails.getService().getStorage() != null) {
    storageTemplate=deploymentDetails.getService().getStorage().getTemplate();
    logger.fine("Storage template " + storageTemplate + " is used with deployment");
  }
  logger.info("Creating cloud machine provisioning config. Template remote directory is: " + serviceTemplate.getRemoteDirectory());
  final CloudifyMachineProvisioningConfig config=new CloudifyMachineProvisioningConfig(deploymentDetails.getCloud(),serviceTemplate,serviceTemplateName,managementTemplate.getRemoteDirectory(),storageTemplate);
  config.setAuthGroups(deploymentDetails.getAuthGroups());
  String cloudOverrides=deploymentDetails.getCloudOverrides();
  if (cloudOverrides != null) {
    logger.fine("Recieved request for installation of " + deploymentDetails.getAbsolutePUName() + " with cloud overrides parameters [ "+ cloudOverrides+ "]");
  }
 else {
    logger.fine("No cloud overrides parameters were requested for the installation of " + deploymentDetails.getAbsolutePUName());
  }
  addCloudConfigurationCostants(config);
  config.setLocator(deploymentDetails.getLocators());
  return config;
}
