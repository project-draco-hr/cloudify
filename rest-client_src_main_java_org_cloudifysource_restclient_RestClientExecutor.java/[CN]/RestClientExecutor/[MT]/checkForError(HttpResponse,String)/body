{
  StatusLine statusLine=response.getStatusLine();
  final int statusCode=statusLine.getStatusCode();
  String reasonPhrase=statusLine.getReasonPhrase();
  String responseBody;
  if (statusCode != HttpStatus.SC_OK) {
    responseBody=getResponseBody(response);
    if (logger.isLoggable(Level.FINE)) {
      logger.log(Level.FINE,"[checkForError] - REST request to " + requestUri + "  failed. status code is: "+ statusCode+ ", response body is: "+ responseBody);
    }
    try {
      final Response<Void> entity=new ObjectMapper().readValue(responseBody,new TypeReference<Response<Void>>(){
      }
);
      throw MessagesUtils.createRestClientResponseException(statusCode,reasonPhrase,entity.getVerbose(),entity.getMessage(),entity.getMessageId());
    }
 catch (    final IOException e) {
      if (logger.isLoggable(Level.WARNING)) {
        logger.log(Level.WARNING,"[checkForError] - failed to read response. responseBody: " + responseBody + ", reasonPhrase:"+ reasonPhrase);
      }
      if (statusCode == CloudifyConstants.HTTP_STATUS_NOT_FOUND) {
        throw MessagesUtils.createRestClientHttpException(e,statusCode,reasonPhrase,responseBody,RestClientMessageKeys.URL_NOT_FOUND.getName(),requestUri);
      }
 else       if (statusCode == CloudifyConstants.HTTP_STATUS_ACCESS_DENIED) {
        throw MessagesUtils.createRestClientHttpException(e,statusCode,reasonPhrase,responseBody,RestClientMessageKeys.NO_PERMISSION_ACCESS_DENIED.getName());
      }
 else       if (statusCode == CloudifyConstants.HTTP_STATUS_UNAUTHORIZED) {
        throw MessagesUtils.createRestClientHttpException(e,statusCode,reasonPhrase,responseBody,CloudifyErrorMessages.UNAUTHORIZED.getName());
      }
 else {
        throw MessagesUtils.createRestClientHttpException(e,statusCode,reasonPhrase,responseBody,RestClientMessageKeys.HTTP_FAILURE.getName(),reasonPhrase,requestUri);
      }
    }
  }
}
