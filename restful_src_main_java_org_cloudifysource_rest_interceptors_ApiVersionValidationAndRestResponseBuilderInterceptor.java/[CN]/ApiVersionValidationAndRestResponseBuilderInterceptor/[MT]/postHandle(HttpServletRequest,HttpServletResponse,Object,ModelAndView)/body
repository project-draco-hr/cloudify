{
  String requestVersion=extractVersionFromRequest(request);
  if (CloudifyConstants.SERVICE_CONTROLLER_URL.equals(requestVersion)) {
    return;
  }
  if (logger.isLoggable(Level.FINEST)) {
    String requestUri=request.getRequestURI();
    Map<String,Object> model=modelAndView.getModel();
    View view=modelAndView.getView();
    StringBuilder message=new StringBuilder("post handle request");
    if (requestUri == null) {
      message.append(", requestUri is null");
    }
 else {
      message.append(" from " + request.getRequestURI());
    }
    if (model == null) {
      message.append(", model is null");
    }
 else {
      message.append(" with model " + model.toString());
    }
    if (view == null) {
      message.append(", view is null");
    }
 else {
      message.append(" and view " + view.toString());
    }
    logger.finest(message.toString());
  }
  Object model=filterModel(modelAndView,handler);
  modelAndView.clear();
  response.setContentType(MediaType.APPLICATION_JSON);
  if (model instanceof Response<?>) {
    String responseBodyStr=new ObjectMapper().writeValueAsString(model);
    response.getOutputStream().write(responseBodyStr.getBytes());
    response.getOutputStream().close();
  }
 else {
    Response<Object> responseBodyObj=new Response<Object>();
    responseBodyObj.setResponse(model);
    responseBodyObj.setStatus("Success");
    responseBodyObj.setMessage(messageSource.getMessage(CloudifyMessageKeys.OPERATION_SUCCESSFULL.getName(),new Object[]{},Locale.US));
    responseBodyObj.setMessageId(CloudifyMessageKeys.OPERATION_SUCCESSFULL.getName());
    String responseBodyStr=new ObjectMapper().writeValueAsString(responseBodyObj);
    response.getOutputStream().write(responseBodyStr.getBytes());
    response.getOutputStream().close();
  }
}
