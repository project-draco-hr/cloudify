{
  final String token=createAuthenticationToken();
  final long endTime=calcEndTimeInMillis(DEFAULT_SHUTDOWN_TIMEOUT_MILLIS,TimeUnit.MILLISECONDS);
  List<Node> nodes;
  try {
    nodes=listServers(token);
  }
 catch (  final XPathExpressionException e) {
    throw new CloudProvisioningException(e);
  }
catch (  final SAXException e) {
    throw new CloudProvisioningException(e);
  }
catch (  final IOException e) {
    throw new CloudProvisioningException(e);
  }
  final List<String> ids=new LinkedList<String>();
  for (  final Node node : nodes) {
    if (node.getName().startsWith(this.serverNamePrefix)) {
      try {
        ids.add(node.getId());
      }
 catch (      final Exception e) {
        throw new CloudProvisioningException(e);
      }
    }
  }
  try {
    terminateServers(ids,token,endTime);
  }
 catch (  TimeoutException e) {
    throw e;
  }
catch (  Exception e) {
    throw new CloudProvisioningException("Failed to shut down managememnt machines",e);
  }
}
