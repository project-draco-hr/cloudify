{
  if (isThrottling()) {
    throw new CloudProvisioningException(RUNNING_THROTTLING);
  }
  final long endTime=System.currentTimeMillis() + unit.toMillis(duration);
  final String token=createAuthenticationToken();
  MachineDetails md;
  try {
    md=newServer(token,endTime,this.template);
  }
 catch (  final Exception e) {
    if (e instanceof UniformInterfaceException && ((UniformInterfaceException)e).getResponse().getStatus() == INTERNAL_SERVER_ERROR) {
      throttlingTimeout=calcEndTimeInMillis(DEFAULT_TIMEOUT_AFTER_CLOUD_INTERNAL_ERROR,TimeUnit.MILLISECONDS);
      throw new CloudProvisioningException(STARTING_THROTTLING,e);
    }
 else {
      throw new CloudProvisioningException(e);
    }
  }
  return md;
}
