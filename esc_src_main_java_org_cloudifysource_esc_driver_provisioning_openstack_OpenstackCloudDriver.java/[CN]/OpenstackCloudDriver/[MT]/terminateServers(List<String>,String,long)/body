{
  for (  String serverId : serverIds) {
    final Node node=getNode(serverId,token);
    if (node.getPublicIp() != null) {
      detachFloatingIP(serverId,node.getPublicIp(),token);
      deleteFloatingIP(node.getPublicIp(),token);
    }
    try {
      service.path(this.pathPrefix + "servers/" + serverId).header("X-Auth-Token",token).accept(MediaType.APPLICATION_XML).delete();
    }
 catch (    final UniformInterfaceException e) {
      throw new IllegalArgumentException(e);
    }
  }
  int successCounter=0;
  for (  String serverId : serverIds) {
    while (System.currentTimeMillis() < endTime) {
      try {
        Node n=this.getNode(serverId,token);
      }
 catch (      UniformInterfaceException e) {
        if (e.getResponse().getStatus() == 404) {
          ++successCounter;
          break;
        }
        throw e;
      }
    }
  }
  if (successCounter == serverIds.size()) {
    return;
  }
  throw new TimeoutException("Nodes " + serverIds + " did not shut down in the required time");
}
