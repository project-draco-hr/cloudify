{
  try {
    provisioning=(ProvisioningDriver)Class.forName(cloud.getConfiguration().getClassName()).newInstance();
  }
 catch (  final ClassNotFoundException e) {
    throw new CLIException("Failed to load provisioning class for cloud: " + cloud.getName() + ". Class not found: "+ cloud.getConfiguration().getClassName(),e);
  }
catch (  final Exception e) {
    throw new CLIException("Failed to load provisioning class for cloud: " + cloud.getName(),e);
  }
  if (provisioning instanceof ProvisioningDriverClassContextAware) {
    final ProvisioningDriverClassContextAware contextAware=(ProvisioningDriverClassContextAware)provisioning;
    contextAware.setProvisioningDriverClassContext(new DefaultProvisioningDriverClassContext());
  }
  provisioning.addListener(new CliProvisioningDriverListener());
  final String serviceName=null;
  ValidationContext validationContext=new ValidationContextImpl();
  try {
    if (performValidation) {
      validateCloudifyUrls(validationContext);
    }
    provisioning.setConfig(cloud,cloud.getConfiguration().getManagementMachineTemplate(),true,serviceName);
    if (performValidation && provisioning instanceof ProvisioningDriverBootstrapValidation) {
      validationContext.validationEvent(ValidationMessageType.TOP_LEVEL_VALIDATION_MESSAGE,ShellUtils.getFormattedMessage(CloudifyErrorMessages.EVENT_VALIDATE_CLOUD_CONFIG.getName()));
      ((ProvisioningDriverBootstrapValidation)provisioning).validateCloudConfiguration(validationContext);
      validationContext.validationEvent(ValidationMessageType.TOP_LEVEL_VALIDATION_MESSAGE,ShellUtils.getFormattedMessage(CloudifyErrorMessages.EVENT_CLOUD_CONFIG_VALIDATED.getName()));
    }
  }
 catch (  CloudProvisioningException e) {
    throw new CLIException(e.getMessage(),e);
  }
}
