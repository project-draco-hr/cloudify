{
  String serverPrefix=desc.getServerPrefix();
  String deploymentSlot=desc.getDeploymentSlot();
  String imageName=desc.getImageName();
  String storageAccountName=desc.getStorageAccountName();
  String userName=desc.getUserName();
  String password=desc.getPassword();
  String networkName=desc.getNetworkName();
  String size=desc.getSize();
  String deploymentName=desc.getDeploymentName();
  InputEndpoints endPoints=desc.getInputEndpoints();
  String roleName=serverPrefix + "_role" + UUIDHelper.generateRandomUUID(UUID_ROLE_LENGTH);
  Deployment deployment=new Deployment();
  deployment.setDeploymentSlot(deploymentSlot);
  deployment.setVirtualNetworkName(networkName);
  deployment.setLabel(CLOUDIFY_DEPLOYMENT_PREFIX);
  deployment.setName(deploymentName);
  RoleList roleList=new RoleList();
  Role role=new Role();
  role.setRoleType("PersistentVMRole");
  role.setRoleName(roleName);
  role.setRoleSize(size);
  OSVirtualHardDisk osVirtualHardDisk=new OSVirtualHardDisk();
  osVirtualHardDisk.setSourceImageName(imageName);
  String mediaLink="https://" + storageAccountName + ".blob.core.windows.net/vhds/"+ deploymentName+ ".vhd";
  osVirtualHardDisk.setMediaLink(mediaLink);
  role.setOSVirtualHardDisk(osVirtualHardDisk);
  ConfigurationSets configurationSets=new ConfigurationSets();
  LinuxProvisioningConfigurationSet linuxProvisioningConfiguration=new LinuxProvisioningConfigurationSet();
  linuxProvisioningConfiguration.setDisableSshPasswordAuthentication(false);
  linuxProvisioningConfiguration.setHostName(roleName);
  linuxProvisioningConfiguration.setUserName(userName);
  linuxProvisioningConfiguration.setUserPassword(password);
  NetworkConfigurationSet networkConfiguration=new NetworkConfigurationSet();
  networkConfiguration.setInputEndpoints(endPoints);
  configurationSets.getConfigurationSets().add(linuxProvisioningConfiguration);
  configurationSets.getConfigurationSets().add(networkConfiguration);
  role.setConfigurationSets(configurationSets);
  roleList.getRoles().add(role);
  deployment.setRoleList(roleList);
  return deployment;
}
