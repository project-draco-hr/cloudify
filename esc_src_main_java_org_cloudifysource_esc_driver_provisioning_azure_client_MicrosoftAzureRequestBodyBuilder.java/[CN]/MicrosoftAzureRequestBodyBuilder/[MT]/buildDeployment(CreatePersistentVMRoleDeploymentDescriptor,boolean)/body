{
  String deploymentSlot=desc.getDeploymentSlot();
  String imageName=desc.getImageName();
  String storageAccountName=desc.getStorageAccountName();
  String userName=desc.getUserName();
  String password=desc.getPassword();
  String networkName=desc.getNetworkName();
  String size=desc.getSize();
  String deploymentName=desc.getDeploymentName();
  InputEndpoints endPoints=desc.getInputEndpoints();
  String roleName=desc.getRoleName();
  Deployment deployment=new Deployment();
  deployment.setDeploymentSlot(deploymentSlot);
  deployment.setDeploymentName(roleName);
  deployment.setVirtualNetworkName(networkName);
  deployment.setLabel(deploymentName);
  deployment.setName(deploymentName);
  RoleList roleList=new RoleList();
  Role role=new Role();
  role.setRoleType("PersistentVMRole");
  role.setRoleName(roleName);
  role.setRoleSize(size);
  OSVirtualHardDisk osVirtualHardDisk=new OSVirtualHardDisk();
  osVirtualHardDisk.setSourceImageName(imageName);
  String mediaLink="https://" + storageAccountName + ".blob.core.windows.net/vhds/"+ deploymentName+ ".vhd";
  osVirtualHardDisk.setMediaLink(mediaLink);
  role.setOSVirtualHardDisk(osVirtualHardDisk);
  ConfigurationSets configurationSets=new ConfigurationSets();
  if (isWindows) {
    String[] computerNameArray=roleName.split("_");
    String computerName=(computerNameArray[2]).toUpperCase();
    WindowsProvisioningConfigurationSet windowsProvisioningSet=new WindowsProvisioningConfigurationSet();
    windowsProvisioningSet.setDisableSshPasswordAuthentication(true);
    windowsProvisioningSet.setHostName(roleName);
    windowsProvisioningSet.setUserName(userName);
    windowsProvisioningSet.setUserPassword(password);
    windowsProvisioningSet.setAdminUsername("Cloudify");
    windowsProvisioningSet.setAdminPassword("f232Fs3SAFa");
    windowsProvisioningSet.setComputerName(computerName);
    configurationSets.getConfigurationSets().add(windowsProvisioningSet);
    WinRm winRm=new WinRm();
    Listeners listeners=new Listeners();
    Listener listener=new Listener();
    listener.setCertificateThumbprint(null);
    listener.setProtocol("Http");
    listeners.getListeners().add(listener);
    listener=new Listener();
    listener.setCertificateThumbprint(null);
    listener.setProtocol("Https");
    listeners.getListeners().add(listener);
    winRm.setListeners(listeners);
    windowsProvisioningSet.setWinRm(winRm);
  }
 else {
    LinuxProvisioningConfigurationSet linuxProvisioningSet=new LinuxProvisioningConfigurationSet();
    linuxProvisioningSet.setDisableSshPasswordAuthentication(true);
    linuxProvisioningSet.setHostName(roleName);
    linuxProvisioningSet.setUserName(userName);
    linuxProvisioningSet.setUserPassword(password);
    configurationSets.getConfigurationSets().add(linuxProvisioningSet);
  }
  NetworkConfigurationSet networkConfiguration=new NetworkConfigurationSet();
  networkConfiguration.setInputEndpoints(endPoints);
  configurationSets.getConfigurationSets().add(networkConfiguration);
  role.setConfigurationSets(configurationSets);
  roleList.getRoles().add(role);
  deployment.setRoleList(roleList);
  return deployment;
}
