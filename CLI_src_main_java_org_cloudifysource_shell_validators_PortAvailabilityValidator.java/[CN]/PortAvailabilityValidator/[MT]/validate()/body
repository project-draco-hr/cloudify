{
  String lrmiPortRange=System.getenv(CloudifyConstants.GSC_LRMI_PORT_RANGE_ENVIRONMENT_VAR);
  if (lrmiPortRange == null) {
    throw new IllegalArgumentException("LRMI port range not configred. The environment variable " + CloudifyConstants.GSC_LRMI_PORT_RANGE_ENVIRONMENT_VAR + " is not set");
  }
  if (lrmiPortRange.indexOf(PORT_RANGE_SEPARATOR) == -1) {
    throw new IllegalArgumentException("Invalid LRMI port range: " + lrmiPortRange + ". The expected "+ "format is <lowest port>-<highest port>, e.g. 7010-7110");
  }
  String lowestPortStr=StringUtils.substringBefore(lrmiPortRange,PORT_RANGE_SEPARATOR);
  String highestPortStr=StringUtils.substringAfter(lrmiPortRange,PORT_RANGE_SEPARATOR);
  int lowestPort=Integer.parseInt(lowestPortStr);
  int highestPort=Integer.parseInt(highestPortStr);
  try {
    IPUtils.validateConnectionInPortRange(Constants.getHostAddress(),lowestPort,highestPort);
  }
 catch (  UnknownHostException uhe) {
    throw new CLIValidationException(uhe,CloudifyErrorMessages.PORT_VALIDATION_ABORTED_UNKNOWN_HOST.getName());
  }
catch (  IOException ioe) {
    throw new CLIValidationException(ioe,CloudifyErrorMessages.PORT_VALIDATION_ABORTED_IO_ERROR.getName(),ioe.getMessage());
  }
catch (  SecurityException se) {
    throw new CLIValidationException(se,CloudifyErrorMessages.PORT_VALIDATION_ABORTED_NO_PERMISSION.getName(),se.getMessage());
  }
}
