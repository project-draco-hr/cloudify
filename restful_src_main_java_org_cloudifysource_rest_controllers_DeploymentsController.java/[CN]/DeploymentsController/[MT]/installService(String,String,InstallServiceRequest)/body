{
  final String absolutePuName=ServiceUtils.getAbsolutePUName(appName,serviceName);
  final File srcFile=repo.get(request.getUploadKey());
  File serviceDir=null;
  try {
    serviceDir=ServiceReader.extractProjectFileToDir(srcFile,absolutePuName,repo.getBaseDir());
  }
 catch (  final IOException e1) {
    throw new RestErrorException("");
  }
  File editSrcFile=srcFile;
  mergeOverridesWithProperties(request,serviceDir);
  try {
    editSrcFile=Packager.createZipFile("temp",serviceDir);
  }
 catch (  IOException e1) {
    throw new RestErrorException("");
  }
  Service service=null;
  try {
    service=ServiceReader.readService(editSrcFile);
  }
 catch (  final DSLException e) {
    throw new RestErrorException("");
  }
catch (  final PackagingException e) {
    throw new RestErrorException("");
  }
  String templateName=getTempalteNameFromService(service);
  validateInstallService(absolutePuName,request,service,templateName);
  InstallServiceResponse installServiceResponse=new InstallServiceResponse();
  String lifecycleEventContainerID="";
  installServiceResponse.setLifecycleEventContainerID(lifecycleEventContainerID);
  return installServiceResponse;
}
