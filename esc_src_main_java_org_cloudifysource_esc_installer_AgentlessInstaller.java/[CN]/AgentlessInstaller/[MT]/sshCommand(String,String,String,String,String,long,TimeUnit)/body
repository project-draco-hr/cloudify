{
  final LoggerOutputStream loggerOutputStream=new LoggerOutputStream(Logger.getLogger(SSH_OUTPUT_LOGGER_NAME));
  loggerOutputStream.setPrefix("[" + host + "] ");
  final org.cloudifysource.esc.util.SSHExec task=new org.cloudifysource.esc.util.SSHExec();
  task.setCommand(command);
  task.setHost(host);
  task.setTrust(true);
  task.setUsername(username);
  task.setTimeout(unit.toMillis(timeout));
  task.setFailonerror(true);
  task.setOutputStream(loggerOutputStream);
  if (keyFile != null) {
    task.setKeyfile(keyFile);
  }
  if (password != null) {
    task.setPassword(password);
  }
  try {
    logger.fine("Executing command: " + command + " on "+ host);
    task.execute();
    loggerOutputStream.close();
  }
 catch (  final BuildException e) {
    if (e instanceof BuildTimeoutException) {
      final TimeoutException ex=new TimeoutException("Command " + command + " failed to execute: "+ e.getMessage());
      ex.initCause(e);
      throw ex;
    }
 else     if (e instanceof ExitStatusException) {
      final ExitStatusException ex=(ExitStatusException)e;
      final int ec=ex.getStatus();
      throw new InstallerException("Command " + command + " failed with exit code: "+ ec,e);
    }
 else {
      throw new InstallerException("Command " + command + " failed to execute.",e);
    }
  }
}
