{
  boolean permissionGranted=false;
  if (StringUtils.isBlank(targetAuthGroupsStr)) {
    if (isLocalCloud()) {
      return true;
    }
 else {
      return (isCloudAdmin(authDetails.getRoles()));
    }
  }
  Collection<String> targetAuthGroups=org.cloudifysource.esc.util.StringUtils.splitAndTrimString(targetAuthGroupsStr,AUTH_GROUPS_DELIMITER);
  Collection<String> userAuthGroups=authDetails.getAuthGroups();
  if (permissionName.equalsIgnoreCase(PERMISSION_TO_VIEW)) {
    if (hasPermissionToView(authDetails,targetAuthGroups)) {
      permissionGranted=true;
      logger.log(Level.INFO,"View permission granted for user " + authDetails.getUsername());
    }
 else {
      logger.log(Level.WARNING,"Insufficient permissions. User " + authDetails.getUsername() + " is only "+ "permitted to view groups: "+ Arrays.toString(userAuthGroups.toArray(new String[userAuthGroups.size()])));
    }
  }
 else   if (permissionName.equalsIgnoreCase(PERMISSION_TO_DEPLOY)) {
    if (hasPermissionToDeploy(authDetails,targetAuthGroups)) {
      permissionGranted=true;
      logger.log(Level.INFO,"Deploy permission granted for user " + authDetails.getUsername());
    }
 else {
      logger.log(Level.WARNING,"Insufficient permissions. User " + authDetails.getUsername() + " is only "+ "permitted to deploy for groups: "+ Arrays.toString(userAuthGroups.toArray(new String[userAuthGroups.size()])));
    }
  }
  return permissionGranted;
}
