{
  String[] cmd=new String[args.length + (verbose ? 2 : 1)];
  int targetIndex=0;
  cmd[targetIndex]=exeFile;
  targetIndex++;
  cmd[targetIndex]=args[0];
  targetIndex++;
  if (verbose) {
    cmd[targetIndex]=argument("verbose");
    targetIndex++;
  }
  System.arraycopy(args,1,cmd,targetIndex,args.length - 1);
  final ProcessBuilder pb=new ProcessBuilder(cmd);
  pb.redirectErrorStream(true);
  if (verbose) {
    System.out.println("Executing command: " + Arrays.toString(cmd));
  }
  Process p;
  try {
    p=pb.start();
  }
 catch (  IOException e) {
    throw new AzureDeploymentException("error occured while running " + Arrays.toString(cmd),e);
  }
  final BufferedReader reader=new BufferedReader(new InputStreamReader(p.getInputStream()));
  final StringBuilder sb=new StringBuilder();
  try {
    String line=reader.readLine();
    while (line != null) {
      sb.append(line).append('\n');
      line=reader.readLine();
    }
  }
 catch (  IOException e) {
    throw new AzureDeploymentException("error occured while running " + Arrays.toString(cmd),e);
  }
  final String readResult=sb.toString();
  final int exitValue=p.waitFor();
  if (exitValue != 0) {
    throw new AzureDeploymentException(exeFile + " exit code: " + exitValue+ "\n Process output:\n"+ readResult);
  }
  return readResult;
}
