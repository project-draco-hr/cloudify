{
  AdminFacade adminFacade=(AdminFacade)session.get(Constants.ADMIN_FACADE);
  if (adminFacade != null && adminFacade.isConnected()) {
    throw new CLIStatusException("already_connected");
  }
  if (timeoutInMinutes < 0) {
    throw new CLIException("-timeout cannot be negative");
  }
  if (progressInMinutes < 1) {
    throw new CLIException("-progress must be positive");
  }
  if (timeoutInMinutes > 0 && timeoutInMinutes < progressInMinutes) {
    throw new CLIException("-timeout must be bigger than -progress-min");
  }
  long end=System.currentTimeMillis() + TimeUnit.MINUTES.toMillis(timeoutInMinutes);
  if (end < 0) {
    throw new CLIException("-timeout caused an overflow. please use a smaller value");
  }
  Properties properties=AzureUtils.getAzureProperties();
  String subscriptionId=AzureUtils.getProperty(properties,"subscriptionId");
  String certificateThumbprint=AzureUtils.getProperty(properties,"certificateThumbprint");
  logger.info("Connecting...");
  AzureDeploymentWrapper azureDeploymentWrapper=new AzureDeploymentWrapper();
  azureDeploymentWrapper.setVerbose(verbose);
  azureDeploymentWrapper.setProgressInMinutes(progressInMinutes);
  azureDeploymentWrapper.setAzureHostedServiceName(azureHostedServiceName);
  azureDeploymentWrapper.setAzureDeploymentSlotName(azureDeploymentSlotName);
  azureDeploymentWrapper.setCertificateThumbprint(certificateThumbprint);
  azureDeploymentWrapper.setSubscriptionId(subscriptionId);
  azureDeploymentWrapper.setTimeoutErrorMessage(TIMEOUT_ERROR_STRING);
  if (timeoutInMinutes == 0) {
    azureDeploymentWrapper.connect(adminFacade);
  }
 else {
    azureDeploymentWrapper.connectAndWait(adminFacade,timeoutInMinutes,TimeUnit.MINUTES);
  }
  return messages.getString("connected_successfully");
}
