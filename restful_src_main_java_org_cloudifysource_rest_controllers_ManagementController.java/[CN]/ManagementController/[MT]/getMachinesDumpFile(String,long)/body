{
  String[] actualProcessors=ProcessorTypes.fromStringList(processors);
  validateGetMachineDump(actualProcessors);
  long totalSize=0;
  final Iterator<Machine> iterator=this.admin.getMachines().iterator();
  final Map<String,byte[]> map=new HashMap<String,byte[]>();
  while (iterator.hasNext()) {
    final Machine machine=iterator.next();
    final byte[] dumpBytes=generateMachineDumpData(fileSizeLimit,machine,actualProcessors);
    totalSize+=dumpBytes.length;
    if (totalSize > fileSizeLimit) {
      throw new RestErrorException(ResponseConstants.DUMP_FILE_TOO_LARGE,Long.toString(dumpBytes.length),Long.toString(totalSize));
    }
    map.put(machine.getHostAddress(),dumpBytes);
  }
  GetMachinesDumpFileResponse response=new GetMachinesDumpFileResponse();
  response.setDumpBytesPerIP(map);
  return response;
}
