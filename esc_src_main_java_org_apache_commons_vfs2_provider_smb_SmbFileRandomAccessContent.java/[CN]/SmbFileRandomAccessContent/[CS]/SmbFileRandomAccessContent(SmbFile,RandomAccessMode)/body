{
  super(mode);
  try {
    raf=new SmbRandomAccessFile(smbFile,mode.getModeString());
    rafis=new InputStream(){
      @Override public int read() throws IOException {
        return raf.readByte();
      }
      @Override public long skip(      long n) throws IOException {
        raf.seek(raf.getFilePointer() + n);
        return n;
      }
      @Override public void close() throws IOException {
        raf.close();
      }
      @Override public int read(      byte b[]) throws IOException {
        return raf.read(b);
      }
      @Override public int read(      byte b[],      int off,      int len) throws IOException {
        return raf.read(b,off,len);
      }
      @Override public int available() throws IOException {
        long available=raf.length() - raf.getFilePointer();
        if (available > Integer.MAX_VALUE) {
          return Integer.MAX_VALUE;
        }
        return (int)available;
      }
    }
;
  }
 catch (  MalformedURLException e) {
    throw new FileSystemException("vfs.provider/random-access-open-failed.error",smbFile,e);
  }
catch (  SmbException e) {
    throw new FileSystemException("vfs.provider/random-access-open-failed.error",smbFile,e);
  }
catch (  UnknownHostException e) {
    throw new FileSystemException("vfs.provider/random-access-open-failed.error",smbFile,e);
  }
}
