{
  Deployment deployment=requestBodyBuilder.buildDeployment(deplyomentDesc);
  String xmlRequest=MicrosoftAzureModelUtils.marshall(deployment,false);
  ClientResponse response=doPost("/" + subscriptionId + "/services/hostedservices/"+ serviceName+ "/deployments",xmlRequest);
  String requestId=extractRequestId(response);
  waitForRequestToFinish(requestId,timeout,timeunit);
  Deployment deploymentResponse=waitForDeploymentStatus("Running",serviceName,deployment.getDeploymentSlot(),timeout,timeunit);
  deploymentResponse=waitForRoleInstanceStatus("ReadyRole",serviceName,deployment.getDeploymentSlot(),timeout,timeunit);
  RoleAddressDetails roleAddressDetails=new RoleAddressDetails();
  roleAddressDetails.setId(deploymentResponse.getPrivateId());
  roleAddressDetails.setPrivateIp(deploymentResponse.getRoleInstanceList().getRoleInstances().get(0).getIpAddress());
  ConfigurationSets configurationSets=deploymentResponse.getRoleList().getRoles().get(0).getConfigurationSets();
  String publicIp=null;
  for (  ConfigurationSet configurationSet : configurationSets) {
    if (configurationSet instanceof NetworkConfigurationSet) {
      NetworkConfigurationSet networkConfigurationSet=(NetworkConfigurationSet)configurationSet;
      publicIp=networkConfigurationSet.getInputEndpoints().getInputEndpoints().get(0).getvIp();
    }
  }
  roleAddressDetails.setPublicIp(publicIp);
  return roleAddressDetails;
}
