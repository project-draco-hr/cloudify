{
  if (!deploymentExists(hostedServiceName,deploymentName)) {
    logger.info("Deployment " + deploymentName + " does not exist");
    return true;
  }
  long currentTimeInMillis=System.currentTimeMillis();
  long lockTimeout=endTime - currentTimeInMillis;
  logger.fine(getThreadIdentity() + "Waiting for pending request lock...");
  boolean lockAcquired=pendingRequest.tryLock(lockTimeout,TimeUnit.MILLISECONDS);
  if (lockAcquired) {
    logger.fine(getThreadIdentity() + "Lock acquired : " + pendingRequest.hashCode());
    logger.fine(getThreadIdentity() + "Executing a request to delete virtual machine");
    try {
      logger.fine(getThreadIdentity() + "Deleting deployment of virtual machine from : " + deploymentName);
      ClientResponse response=doDelete("/services/hostedservices/" + hostedServiceName + "/deployments/"+ deploymentName);
      String requestId=extractRequestId(response);
      waitForRequestToFinish(requestId,endTime);
      pendingRequest.unlock();
      logger.fine(getThreadIdentity() + "Lock unlcoked");
    }
 catch (    final Exception e) {
      logger.fine(getThreadIdentity() + "About to release lock " + pendingRequest.hashCode());
      pendingRequest.unlock();
      if (e instanceof MicrosoftAzureException) {
        throw (MicrosoftAzureException)e;
      }
      if (e instanceof TimeoutException) {
        throw (TimeoutException)e;
      }
      if (e instanceof InterruptedException) {
        throw (InterruptedException)e;
      }
    }
    return true;
  }
 else {
    throw new TimeoutException("Failed to acquire lock for deleteDeployment request after + " + lockTimeout + " milliseconds");
  }
}
