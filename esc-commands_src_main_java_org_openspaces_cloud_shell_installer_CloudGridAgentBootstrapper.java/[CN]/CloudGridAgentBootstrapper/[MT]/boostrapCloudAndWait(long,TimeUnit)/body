{
  long end=System.currentTimeMillis() + timeoutUnit.toMillis(timeout);
  try {
    ShellUtils.checkNotNull("providerDirectory",providerDirecotry);
    Cloud cloudDsl=ServiceReader.getCloudFromDirectory(providerDirecotry);
    final CloudMachineProvisioningConfig config=CloudDSLToCloudMachineProvisioningConfig.convert(cloudDsl);
    String managementGroup=config.getManagementGroup();
    Set<? extends NodeMetadata> servers=startManagementNodes(managementGroup,config,Utils.millisUntil(end),TimeUnit.MILLISECONDS);
    for (    NodeMetadata server : servers) {
      String ipAddress=config.isConnectedToPrivateIp() ? server.getPrivateAddresses().iterator().next() : server.getPublicAddresses().iterator().next();
      URL restAdminUrl=new URI("http",null,ipAddress,REST_GATEWAY_PORT,null,null,null).toURL();
      URL webUIUrl=new URI("http",null,ipAddress,WEBUI_PORT,null,null,null).toURL();
      waitForConnection(restAdminUrl,Utils.millisUntil(end),TimeUnit.MILLISECONDS);
      logger.info("Rest service is available at: " + restAdminUrl);
      logger.info("Webui service is available at: " + webUIUrl);
    }
  }
 catch (  IOException e) {
    throw new CLIException("bootstrap-cloud failed",e);
  }
catch (  URISyntaxException e) {
    throw new CLIException("bootstrap-cloud failed",e);
  }
}
