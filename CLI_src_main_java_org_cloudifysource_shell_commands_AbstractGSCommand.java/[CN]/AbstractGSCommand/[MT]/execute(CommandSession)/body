{
  this.session=session;
  messages=ShellUtils.getMessageBundle();
  try {
    if (adminAware) {
      adminFacade=(AdminFacade)session.get(Constants.ADMIN_FACADE);
      if (!adminFacade.isConnected()) {
        throw new CLIStatusException("not_connected");
      }
    }
    if (this instanceof NewRestClientCommand && NewRestClientUtils.isNewRestClientEnabled()) {
      if (logger.isLoggable(Level.FINE)) {
        logger.fine("executing " + this.getClass().getName() + " command using the new rest client.");
      }
      return ((NewRestClientCommand)this).doExecuteNewRestClient();
    }
    if (logger.isLoggable(Level.FINE)) {
      logger.fine("executing " + this.getClass().getName() + " command using the old rest client.");
    }
    return doExecute();
  }
 catch (  final CLIStatusException e) {
    handle(new CLIStatusExceptionHandler(e),e);
  }
catch (  final CLIException e) {
    handle(new CLIExceptionHandler(e),e);
  }
catch (  final RestClientException e) {
    handle(new RestClientExceptionHandler(e),e);
  }
catch (  final InterruptedException e) {
    handle(new InterruptedExceptionHandler(),e);
  }
catch (  final Throwable t) {
    handle(new ThrowableHandler(t),t);
  }
  return getFormattedMessage("op_failed",Color.RED,"");
}
