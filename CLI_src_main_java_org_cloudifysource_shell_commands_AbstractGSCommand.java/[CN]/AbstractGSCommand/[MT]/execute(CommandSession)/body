{
  this.session=session;
  messages=ShellUtils.getMessageBundle();
  try {
    if (adminAware) {
      adminFacade=(AdminFacade)session.get(Constants.ADMIN_FACADE);
      if (!adminFacade.isConnected()) {
        throw new CLIStatusException("not_connected");
      }
    }
    final Object result=doExecute();
    return result;
  }
 catch (  final CLIStatusException cse) {
    if (verbose) {
      logger.log(Level.WARNING,getFormattedMessageFromErrorStatusException(cse),cse);
    }
 else {
      logger.log(Level.WARNING,getFormattedMessageFromErrorStatusException(cse));
    }
    raiseCloseShellExceptionIfNonInteractive(session,cse);
  }
catch (  final CLIException e) {
    if (!verbose) {
      e.setStackTrace(new StackTraceElement[]{});
    }
    logger.log(Level.WARNING,"",e);
    raiseCloseShellExceptionIfNonInteractive(session,e);
  }
catch (  final InterruptedException e) {
    final String msg=messages.getString("command_interrupted");
    if (verbose) {
      logger.log(Level.SEVERE,msg,e);
    }
 else {
      logger.log(Level.SEVERE,msg);
    }
    raiseCloseShellExceptionIfNonInteractive(session,e);
  }
catch (  final Throwable e) {
    if (verbose) {
      logger.log(Level.SEVERE,"",e);
    }
 else {
      logger.log(Level.SEVERE,e.getMessage());
    }
    raiseCloseShellExceptionIfNonInteractive(session,e);
  }
  return getFormattedMessage("op_failed",Color.RED,"");
}
