{
  try {
    Cloud cloud=ServiceReader.readCloud(new File(MISSING_START_MNG_GROOVY_PATH));
    Assert.fail("Dynamic byon cloud groovy missing a declaration for the startManagementMachines closure " + "in its management template's custom closure, " + "a DSL validation exception was expected.");
  }
 catch (  Exception e) {
    Assert.assertTrue(e.getMessage().contains("The " + CloudifyConstants.DYNAMIC_BYON_START_MNG_MACHINES_KEY + " closure is missing"));
  }
  try {
    Cloud cloud=ServiceReader.readCloud(new File(MISSING_STOP_MNG_GROOVY_PATH));
    Assert.fail("Dynamic byon cloud groovy missing a declaration for the stopManagementMachines closure " + "in its management template's custom closure, " + "a DSL validation exception was expected.");
  }
 catch (  Exception e) {
    Assert.assertTrue(e.getMessage().contains("The " + CloudifyConstants.DYNAMIC_BYON_STOP_MNG_MACHINES_KEY + " closure is missing"));
  }
  try {
    Cloud cloud=ServiceReader.readCloud(new File(MISSING_START_MACHINE_GROOVY_PATH));
    Assert.fail("Dynamic byon cloud groovy missing a declaration for a startMachine closure " + "in at least one of its template's custom closure, " + "a DSL validation exception was expected.");
  }
 catch (  Exception e) {
    Assert.assertTrue(e.getMessage().contains("The " + CloudifyConstants.DYNAMIC_BYON_START_MACHINE_KEY + " closure is missing"));
  }
  try {
    Cloud cloud=ServiceReader.readCloud(new File(MISSING_STOP_MACHINE_GROOVY_PATH));
    Assert.fail("Dynamic byon cloud groovy missing a declaration for a stopMachine closure " + "in at least one of its template's custom closure, " + "a DSL validation exception was expected.");
  }
 catch (  Exception e) {
    Assert.assertTrue(e.getMessage().contains("The " + CloudifyConstants.DYNAMIC_BYON_STOP_MACHINE_KEY + " closure is missing"));
  }
}
