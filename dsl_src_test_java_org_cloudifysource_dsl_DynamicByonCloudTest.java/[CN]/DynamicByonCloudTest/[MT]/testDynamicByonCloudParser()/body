{
  Cloud cloud=ServiceReader.readCloud(new File(DYNAMIC_BYON_CLOUD_PATH));
  assertNotNull(cloud);
  assertNotNull(cloud.getProvider());
  final Map<String,CloudTemplate> templates=cloud.getTemplates();
  assertNotNull(templates);
  assertNotNull(cloud.getUser());
  final CloudConfiguration configuration=cloud.getConfiguration();
  assertNotNull(configuration);
  String managementMachineTemplate=configuration.getManagementMachineTemplate();
  assertNotNull(managementMachineTemplate);
  final CloudTemplate managementTemplate=templates.get(managementMachineTemplate);
  assertNotNull(managementTemplate);
  assertEquals("org.cloudifysource.esc.driver.provisioning.byon.DynamicByonProvisioningDriver",configuration.getClassName());
  Map<String,Object> custom=managementTemplate.getCustom();
  assertNotNull(custom);
  @SuppressWarnings("unchecked") Closure<String> startClosure=(Closure<String>)custom.get(CloudifyConstants.DYNAMIC_BYON_START_MACHINE_KEY);
  String ip=startClosure.call();
  assertNotNull(ip);
  Properties props=new Properties();
  props.load(new FileInputStream(new File(DYNAMIC_BYON_CLOUD_PROPERTIES_PATH)));
  String expectedIP=props.getProperty(START_MACHINE_IP_PROPERTY_NAME).replace("\"","");
  assertEquals(expectedIP,ip);
  String ipProperty=System.getProperty(CloudifyConstants.DYNAMIC_BYON_STOP_MACHINE_KEY);
  assertNull(ipProperty);
  Closure<?> stopClosure=(Closure<?>)custom.get(CloudifyConstants.DYNAMIC_BYON_STOP_MACHINE_KEY);
  stopClosure.call(ip);
  ipProperty=System.getProperty(CloudifyConstants.DYNAMIC_BYON_STOP_MACHINE_KEY);
  assertNotNull(ipProperty);
  assertEquals(expectedIP,ipProperty);
  @SuppressWarnings("unchecked") Closure<List<String>> startMngMachinesClosure=(Closure<List<String>>)custom.get(CloudifyConstants.DYNAMIC_BYON_START_MNG_MACHINES_KEY);
  List<String> managemetnMachines=startMngMachinesClosure.call();
  ipProperty=System.getProperty(CloudifyConstants.DYNAMIC_BYON_STOP_MNG_MACHINES_KEY);
  assertNull(ipProperty);
  Closure<?> stopMngMachinesClosure=(Closure<?>)custom.get(CloudifyConstants.DYNAMIC_BYON_STOP_MNG_MACHINES_KEY);
  stopMngMachinesClosure.call();
  ipProperty=System.getProperty(CloudifyConstants.DYNAMIC_BYON_STOP_MNG_MACHINES_KEY);
  String[] split=ipProperty.split(",");
  List<String> asList=Arrays.asList(split);
  assertEquals(managemetnMachines,asList);
}
