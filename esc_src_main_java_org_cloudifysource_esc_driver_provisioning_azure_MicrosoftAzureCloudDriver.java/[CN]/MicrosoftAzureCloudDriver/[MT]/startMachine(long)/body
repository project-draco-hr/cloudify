{
  MachineDetails machineDetails=new MachineDetails();
  CreatePersistentVMRoleDeploymentDescriptor desc;
  RoleDetails roleAddressDetails;
  try {
    desc=new CreatePersistentVMRoleDeploymentDescriptor();
    desc.setRoleName(serverNamePrefix + "_role");
    desc.setDeploymentSlot(deploymentSlot);
    desc.setDeploymentName(deploymentName);
    desc.setImageName(imageName);
    desc.setAvailabilitySetName(availabilitySet);
    desc.setAffinityGroup(affinityGroup);
    InputEndpoints inputEndpoints=createInputEndPoints();
    desc.setInputEndpoints(inputEndpoints);
    desc.setNetworkName(networkName);
    desc.setPassword(password);
    desc.setSize(size);
    desc.setStorageAccountName(storageAccountName);
    desc.setUserName(userName);
    logger.info("Launching a new virtual machine");
    boolean isWindows=isWindowsVM();
    roleAddressDetails=azureClient.createVirtualMachineDeployment(desc,isWindows,endTime);
    machineDetails.setPrivateAddress(roleAddressDetails.getPrivateIp());
    machineDetails.setPublicAddress(roleAddressDetails.getPublicIp());
    machineDetails.setMachineId(roleAddressDetails.getId());
    machineDetails.setAgentRunning(false);
    machineDetails.setCloudifyInstalled(false);
    machineDetails.setInstallationDirectory(this.template.getRemoteDirectory());
    machineDetails.setRemoteDirectory(this.template.getRemoteDirectory());
    machineDetails.setRemotePassword(password);
    machineDetails.setRemoteUsername(userName);
    machineDetails.setRemoteExecutionMode(this.remoteExecutionMode);
    machineDetails.setFileTransferMode(this.fileTransferMode);
    machineDetails.setScriptLangeuage(this.scriptLanguage);
    openFirewallPorts(machineDetails);
    machineDetails.setOpenFilesLimit(this.template.getOpenFilesLimit());
    return machineDetails;
  }
 catch (  final Exception e) {
    throw new CloudProvisioningException(e);
  }
}
