{
  String restTempFolderName="";
  if (!StringUtils.isEmpty(temporaryFolder)) {
    restTempFolderName=temporaryFolder;
  }
 else {
    restTempFolderName=CloudifyConstants.REST_FOLDER;
  }
  File restTempFolder=new File(restTempFolderName);
  if (restTempFolder.exists()) {
    try {
      FileUtils.deleteDirectory(restTempFolder);
    }
 catch (    IOException e) {
      logger.warning("failed to delete rest template folder [" + restTempFolder.getAbsolutePath() + "], "+ "attempting to create a new folder for this purpose");
      e.printStackTrace();
      try {
        String uniqueFolderName=org.cloudifysource.esc.util.FileUtils.createUniqueFolderName(restTempFolder.getParentFile(),restTempFolder.getName(),MAX_FILE_NAME_APPENDER);
        restTempFolder=new File(restTempFolder.getParentFile(),uniqueFolderName);
      }
 catch (      IOException ioe) {
        ioe.printStackTrace();
        throw new RestErrorException(CloudifyMessageKeys.UPLOAD_DIRECTORY_CREATION_FAILED.getName(),ioe.getMessage());
      }
    }
  }
  restTempFolder.deleteOnExit();
  final boolean mkdirs=restTempFolder.mkdirs();
  final String absolutePath=restTempFolder.getAbsolutePath();
  if (mkdirs) {
    if (logger.isLoggable(Level.INFO)) {
      logger.log(Level.INFO,"created rest temp directory - " + absolutePath);
    }
  }
 else {
    if (logger.isLoggable(Level.WARNING)) {
      logger.warning("failed to create rest temp directory at " + absolutePath);
    }
    throw new RestErrorException(CloudifyMessageKeys.UPLOAD_DIRECTORY_CREATION_FAILED.getName(),absolutePath);
  }
  return restTempFolder;
}
