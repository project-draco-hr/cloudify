{
  createConditionLatch(timeout,timeunit).waitFor(new ConditionLatch.Predicate(){
    private boolean messagePublished=false;
    /** 
 * {@inheritDoc}
 */
    @Override public boolean isDone() throws CLIException, InterruptedException {
      logger.fine("Waiting for " + serviceName + " service.");
      if (!messagePublished) {
        final String message=ShellUtils.getMessageBundle().getString("starting_management_web_service");
        publishEvent(MessageFormat.format(message,serviceName.toUpperCase()));
        messagePublished=true;
      }
      final ProcessingUnit pu=getProcessingUnit();
      boolean isDone=false;
      if (pu != null) {
        for (        final ProcessingUnitInstance instance : pu) {
          GridServiceContainer gsc=instance.getGridServiceContainer();
          if (gsc != null) {
            GridServiceAgent gsa=gsc.getGridServiceAgent();
            if (gsa != null && (agent.equals(gsa))) {
              isDone=true;
              break;
            }
          }
        }
      }
      if (!isDone) {
        publishEvent(null);
      }
      return isDone;
    }
  }
);
  final URL url=getWebProcessingUnitURL(agent,getProcessingUnit(),isSecureConnection);
  final String serviceNameCapital=StringUtils.capitalize(serviceName);
  final String returnMessage=ShellUtils.getMessageBundle().getString("web_service_available_at");
  logger.fine(returnMessage);
  publishEvent(MessageFormat.format(returnMessage,serviceNameCapital,url));
  return url;
}
