{
  final long end=System.currentTimeMillis() + this.timeoutInMillis;
  final InputStream is=openConnectionInputStream(downloadURL);
  if (is == null) {
    logger.log(Level.WARNING,"connection input stream failed to initialize");
    throw new ResourceDownloadException("Failed getting " + this.resourceUrl + " to "+ destination.getAbsolutePath());
  }
  final OutputStream os=getFileOutputString(destination);
  boolean finished=false;
  try {
    final byte[] buffer=new byte[BUFFER_SIZE];
    int length;
    logger.info("Downloading " + downloadURL.toString() + " to "+ this.resourceDest);
    while ((length=is.read(buffer)) >= 0) {
      os.write(buffer,0,length);
      if (end < System.currentTimeMillis()) {
        throw new TimeoutException();
      }
    }
    finished=true;
  }
 catch (  IOException e) {
    logger.warning("Failed downloading resource from " + downloadURL.toString() + ". Reason was: "+ e.getMessage());
    throw new ResourceDownloadException("Failed downloading resource. Reason was: " + e.getMessage(),e);
  }
 finally {
    IOUtils.closeQuietly(os);
    IOUtils.closeQuietly(is);
    if (!finished) {
      logger.log(Level.WARNING,"Download did not complete successfully. deleting file.");
      destination.delete();
    }
  }
}
