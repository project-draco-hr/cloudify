{
  String cloudFolder=CLOUDS_FOLDER_PATH + FILE_SEPARATOR + cloud.getName();
  String groovyFile=cloudFolder + FILE_SEPARATOR + cloud.getName()+ "-cloud.groovy";
  String propertiesFile=cloudFolder + FILE_SEPARATOR + cloud.getName()+ "-cloud.properties";
  validationContext.validationEvent(ValidationMessageType.TOP_LEVEL_VALIDATION_MESSAGE,getFormattedMessage("validating_all_templates"));
  final Map<String,ComputeTemplate> templates=cloud.getCloudCompute().getTemplates();
  final String mangementTemplateName=cloud.getConfiguration().getManagementMachineTemplate();
  final ComputeTemplate managementComputeTemplate=cloud.getCloudCompute().getTemplates().get(mangementTemplateName);
  this.validateOpenstackEndpoint(validationContext,managementComputeTemplate);
  validateCredentials(validationContext);
  validateQuotas(validationContext);
  final CloudNetwork cloudNetwork=configuration.getCloud().getCloudNetwork();
  this.validateManagementNetwork(validationContext,managementComputeTemplate,cloudNetwork);
  if (cloudNetwork != null) {
    this.validateTemplateNetworks(validationContext,cloudNetwork,templates.values());
  }
  this.validateComputeTemplates(validationContext,groovyFile,propertiesFile,templates);
}
