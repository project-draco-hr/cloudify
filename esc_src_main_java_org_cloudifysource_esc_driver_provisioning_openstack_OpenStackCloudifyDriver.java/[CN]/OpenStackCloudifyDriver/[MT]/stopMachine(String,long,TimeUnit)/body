{
  boolean stopResult=false;
  logger.info("Stop Machine - machineIp: " + serverIp);
  logger.info("Looking up cloud server with IP: " + serverIp);
  final NovaServer server;
  try {
    server=computeApi.getServerByIpAndSecurityGroup(serverIp,this.securityGroupNames.getServiceName());
  }
 catch (  final OpenstackException e) {
    throw new CloudProvisioningException(e);
  }
  if (server != null) {
    logger.info("Found server: " + server.getId() + ". Shutting it down and waiting for shutdown to complete");
    this.releaseFloatingIpsForServerId(server.getId());
    try {
      computeApi.deleteServer(server.getId());
    }
 catch (    final OpenstackException e) {
      throw new CloudProvisioningException(e);
    }
    if (duration != 0) {
      this.waitForServerToBeShutdown(server.getId(),duration,unit);
    }
    logger.info("Server: " + server.getId() + " is shutdown.");
    stopResult=true;
  }
 else {
    logger.log(Level.SEVERE,"Received scale in request for machine with ip " + serverIp + " but this IP could not be found in the Cloud server list");
    stopResult=false;
  }
  return stopResult;
}
