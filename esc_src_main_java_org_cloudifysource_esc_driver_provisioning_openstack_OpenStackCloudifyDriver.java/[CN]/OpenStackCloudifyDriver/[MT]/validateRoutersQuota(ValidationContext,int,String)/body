{
  int routersUsage=0;
  validationContext.validationOngoingEvent(ValidationMessageType.ENTRY_VALIDATION_MESSAGE,getFormattedMessage("validating_routers"));
  logger.finest("routers quota: " + routersQuota);
  if (UNLIMITED_RESOURCE_QUOTA == routersQuota) {
    validationContext.validationEventEnd(ValidationResultType.OK);
  }
 else {
    if (!networkHelper.isCreateExternalRouter()) {
      validationContext.validationEventEnd(ValidationResultType.OK);
    }
 else {
      int plannedRoutersCount=DEFAULT_ROUTERS_COUNT;
      logger.finest("planned routers count: " + plannedRoutersCount);
      try {
        List<Router> routers=networkApi.getRoutersByTenantId(tenantId);
        if (routers != null) {
          routersUsage=routers.size();
        }
      }
 catch (      OpenstackException e) {
        throw new CloudProvisioningException("Error getting routers usage from openstack",e);
      }
      logger.finest("routers usage: " + routersUsage);
      if (routersQuota - routersUsage >= plannedRoutersCount) {
        validationContext.validationEventEnd(ValidationResultType.OK);
      }
 else {
        validationContext.validationEventEnd(ValidationResultType.ERROR);
        throw new CloudProvisioningException(getFormattedMessage("resource_validation_failure","routers",routersQuota,routersUsage,plannedRoutersCount));
      }
    }
  }
}
