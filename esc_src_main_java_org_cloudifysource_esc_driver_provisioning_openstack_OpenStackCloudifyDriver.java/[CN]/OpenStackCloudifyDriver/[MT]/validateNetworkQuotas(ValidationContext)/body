{
  try {
    validationContext.validationOngoingEvent(ValidationMessageType.TOP_LEVEL_VALIDATION_MESSAGE,getFormattedMessage("validating_network_quotas"));
    final String tenantId=computeApi.getTenantId();
    if (StringUtils.isBlank(tenantId)) {
      validationContext.validationEventEnd(ValidationResultType.WARNING);
      logger.warning("Failed to retrieve tenant id, skipping network quotas validation");
      return;
    }
    final Quota quotas=this.networkApi.getQuotasForTenant(tenantId);
    if (quotas == null) {
      throw new OpenstackException("Failed getting network quotas.");
    }
    validateSecurityGroupsQuota(validationContext,quotas.getSecurityGroup(),tenantId);
    validateSecurityGroupRulesQuota(validationContext,quotas.getSecurityGroupRule(),tenantId);
    validateRoutersQuota(validationContext,quotas.getRouter(),tenantId);
    validateNetworksQuota(validationContext,quotas.getNetwork(),tenantId);
    validateSubnetsQuota(validationContext,quotas.getSubnet(),tenantId);
    validateFloatingIpsQuota(validationContext,quotas.getFloatingip());
    validationContext.validationEventEnd(ValidationResultType.OK);
  }
 catch (  final OpenstackException e) {
    validationContext.validationEventEnd(ValidationResultType.WARNING);
    logger.info("Cannot validate network quotas on this provider.");
  }
}
