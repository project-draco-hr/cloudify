{
  try {
    this.cleanAllNetworks();
    final ManagementNetwork managementNetwork=this.cloud.getCloudNetwork().getManagement();
    final NetworkConfiguration networkConfiguration=managementNetwork.getNetworkConfiguration();
    if (networkConfiguration.getSubnets().size() != 1) {
      throw new IllegalStateException("Management network should have exactly 1 subnet.");
    }
    final Network networkRequest=new Network();
    networkRequest.setName(this.managementNetworkName);
    networkRequest.setAdminStateUp(true);
    final Network network=quantumApi.createNetworkIfNotExists(networkRequest);
    final org.cloudifysource.domain.cloud.network.Subnet subnetConfig=networkConfiguration.getSubnets().get(0);
    final Subnet subnetRequest=this.createSubnetRequest(subnetConfig,network.getId());
    final Subnet subnet=quantumApi.createSubnet(subnetRequest);
    final String publicNetworkId=quantumApi.getPublicNetworkId();
    final Router request=new Router();
    request.setName(this.securityGroupNames.getPrefix() + MANAGEMENT_PUBLIC_ROUTER_NAME);
    request.setAdminStateUp(true);
    request.setExternalGatewayInfo(new RouterExternalGatewayInfo(publicNetworkId));
    final Router router=quantumApi.createRouter(request);
    quantumApi.addRouterInterface(router.getId(),subnet.getId());
  }
 catch (  final Exception e) {
    throw new CloudProvisioningException(e);
  }
}
