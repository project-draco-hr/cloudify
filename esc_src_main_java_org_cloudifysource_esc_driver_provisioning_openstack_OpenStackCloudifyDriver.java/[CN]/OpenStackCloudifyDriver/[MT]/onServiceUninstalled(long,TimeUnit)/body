{
  final String ssgName=this.openstackPrefixes.getServiceName();
  logger.info("Service '" + ssgName + "'is being uninstall.");
  try {
    final Applications applications=this.admin.getApplications();
    final Application application=applications.getApplication(this.applicationName);
    if (application == null) {
      logger.info("No remaining services in the application.");
      logger.info("Delete the application security group.");
      final String applicationName=this.openstackPrefixes.getApplicationName();
      final SecurityGroup secgroup=this.networkApi.getSecurityGroupsByName(applicationName);
      if (secgroup != null) {
        networkApi.deleteSecurityGroup(secgroup.getId());
      }
      if (this.networkHelper.useApplicationNetworkTemplate()) {
        logger.info("Delete the network.");
        final String prefixedNetworkName=this.networkHelper.getApplicationNetworkPrefixedName();
        try {
          final Network appliNetwork=networkApi.getNetworkByName(prefixedNetworkName);
          networkApi.deleteNetwork(appliNetwork.getId());
        }
 catch (        final Exception e) {
          logger.warning("Network '" + prefixedNetworkName + "' was not deleted: "+ e.getMessage());
        }
      }
    }
    logger.info("Clean service's security group :" + ssgName + "*");
    final List<SecurityGroup> securityGroups=this.networkApi.getSecurityGroupsByPrefix(ssgName);
    for (    final SecurityGroup securityGroup : securityGroups) {
      this.networkApi.deleteSecurityGroup(securityGroup.getId());
    }
  }
 catch (  Exception e) {
    logger.log(Level.SEVERE,"Fail to clean security group resources of service " + ssgName,e);
  }
 finally {
    if (this.computeApi != null) {
      this.computeApi.close();
    }
    if (this.networkApi != null) {
      this.networkApi.close();
    }
  }
}
