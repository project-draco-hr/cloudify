{
  if (cloudOverrides != null) {
    if (cloudOverrides.length() >= TEN_K) {
      throw new CLIStatusException(CloudifyErrorMessages.CLOUD_OVERRIDES_TO_LONG.getName());
    }
  }
  RecipePathResolver pathResolver=new RecipePathResolver();
  File providerDirectory=null;
  if (pathResolver.resolveCloud(new File(cloudProvider))) {
    providerDirectory=pathResolver.getResolved();
  }
 else {
    throw new CLIStatusException("cloud_driver_file_doesnt_exist",StringUtils.join(pathResolver.getPathsLooked().toArray(),", "));
  }
  setSecurityMode();
  if (securityProfile.equalsIgnoreCase(CloudifyConstants.SPRING_PROFILE_SECURE_NO_SSL) || securityProfile.equalsIgnoreCase(CloudifyConstants.SPRING_PROFILE_SECURE)) {
    copySecurityFiles(providerDirectory.getAbsolutePath());
  }
  File cloudFile=findCloudFile(providerDirectory);
  File cloudPropertiesFile=new File(providerDirectory,cloudFile.getName().split("\\.")[0] + DSLUtils.PROPERTIES_FILE_SUFFIX);
  File backupCloudPropertiesFile=new File(cloudPropertiesFile.getParentFile(),cloudPropertiesFile.getName() + ".backup");
  Cloud cloud=null;
  if (cloudOverrides == null) {
    cloud=ServiceReader.readCloud(cloudFile);
  }
 else {
    cloud=ServiceReader.readCloudFromDirectory(providerDirectory.getAbsolutePath(),FileUtils.readFileToString(cloudOverrides));
    if (cloudPropertiesFile.exists()) {
      FileUtils.copyFile(cloudPropertiesFile,backupCloudPropertiesFile);
    }
    FileAppender appender=new FileAppender(cloudPropertiesFile);
    appender.append("Overrides File Properties",cloudOverrides);
    appender.flush();
  }
  CloudGridAgentBootstrapper installer=new CloudGridAgentBootstrapper();
  installer.setProviderDirectory(providerDirectory);
  if (this.adminFacade != null) {
    installer.setAdminFacade(this.adminFacade);
  }
 else {
    installer.setAdminFacade((AdminFacade)session.get(Constants.ADMIN_FACADE));
  }
  installer.setProgressInSeconds(10);
  installer.setVerbose(verbose);
  installer.setCloud(cloud);
  installer.setCloudFile(cloudFile);
  installer.setNoWebServices(noWebServices);
  limitLoggingLevel();
  logger.info(getFormattedMessage("bootstrapping_cloud",cloudProvider));
  try {
    installer.boostrapCloudAndWait(securityProfile,username,password,keystorePassword,timeoutInMinutes,TimeUnit.MINUTES);
    return getFormattedMessage("cloud_started_successfully",cloudProvider);
  }
  finally {
    if (cloudOverrides != null) {
      cloudPropertiesFile.delete();
    }
    if (backupCloudPropertiesFile.exists()) {
      FileUtils.copyFile(backupCloudPropertiesFile,cloudPropertiesFile);
      backupCloudPropertiesFile.delete();
    }
    installer.close();
    restoreLoggingLevel();
  }
}
