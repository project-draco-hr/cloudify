{
  final File file=getPidFile();
  if (file.exists()) {
    String pidString;
    try {
      pidString=FileUtils.readFileToString(file);
    }
 catch (    final IOException e) {
      throw new USMException("Failed to read pid file contents from file: " + file,e);
    }
    final List<Long> pidsFromFile=parsePIDsString(file,pidString);
    this.childProcessID=0;
    final boolean atLeastOneProcessAlive=isAnyProcessAlive(file,pidsFromFile);
    if (atLeastOneProcessAlive) {
      this.serviceProcessPIDs=pidsFromFile;
      try {
        logProcessDetails();
      }
 catch (      final SigarException e) {
        logger.log(Level.SEVERE,"Failed to log process details",e);
      }
      return true;
    }
 else {
      logger.warning("PID file: " + file + " was found with PIDs: "+ pidsFromFile+ " but these process do not exist. PID Files will be deleted.");
      deleteProcessFiles(file);
      return false;
    }
  }
  deleteProcessFiles(file);
  return false;
}
