{
  if (org.apache.commons.lang.StringUtils.isBlank(serverName)) {
    throw new CloudProvisioningException("Failed to create new cloud node, server name is missing");
  }
  final Map<String,List<CustomNode>> templateLists=nodesListsByTemplates.get(templateName);
  if (templateLists == null || templateLists.isEmpty()) {
    throw new CloudProvisioningException("Failed to create new cloud node. \"" + templateName + "\" is not a known template.");
  }
  final List<CustomNode> freeNodesPool=templateLists.get(NODES_LIST_FREE);
  final List<CustomNode> allocatedNodesPool=templateLists.get(NODES_LIST_ALLOCATED);
  final List<CustomNode> invalidNodesPool=templateLists.get(NODES_LIST_INVALID);
  if (freeNodesPool.isEmpty() && invalidNodesPool.isEmpty()) {
    throw new CloudProvisioningException("Failed to create a new cloud node for template \"" + templateName + "\", all available nodes are currently used");
  }
  CustomNode node=null;
  if (!freeNodesPool.isEmpty()) {
    node=freeNodesPool.iterator().next();
    if (!allocatedNodesPool.contains(node)) {
      try {
        String resolvedIP=IPUtils.resolveHostName(node.getPrivateIP());
        node.setResolvedIP(resolvedIP);
        IPUtils.validateConnection(node.getResolvedIP(),node.getLoginPort());
        allocatedNodesPool.add(node);
        freeNodesPool.remove(node);
      }
 catch (      final Exception e) {
        logger.log(Level.INFO,"Failed to create server on " + node.getPrivateIP() + ", connection failed on port "+ node.getLoginPort(),e);
        try {
          invalidateServer(templateName,node);
        }
 catch (        final CloudProvisioningException ie) {
          logger.log(Level.INFO,"Failed to mark machine " + node.getPrivateIP() + " as Invalid.",ie);
        }
        throw new CloudProvisioningException(e);
      }
    }
  }
 else {
    for (    CustomNode currentNode : invalidNodesPool) {
      try {
        String resolvedIP=IPUtils.resolveHostName(currentNode.getPrivateIP());
        currentNode.setResolvedIP(resolvedIP);
        IPUtils.validateConnection(currentNode.getPrivateIP(),currentNode.getLoginPort());
        if (!allocatedNodesPool.contains(currentNode)) {
          allocatedNodesPool.add(currentNode);
        }
        invalidNodesPool.remove(currentNode);
        node=currentNode;
        break;
      }
 catch (      final Exception ex) {
      }
    }
  }
  if (node == null) {
    throw new CloudProvisioningException("Failed to create a new cloud node for template \"" + templateName + "\", all available nodes are currently used");
  }
  ((CustomNodeImpl)node).setNodeName(serverName);
  return node;
}
