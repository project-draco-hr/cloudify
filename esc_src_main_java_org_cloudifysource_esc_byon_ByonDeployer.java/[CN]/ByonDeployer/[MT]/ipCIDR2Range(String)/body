{
  final String[] parts=ipCidr.split("/");
  final String ip=parts[0];
  int maskBits;
  if (parts.length < 2) {
    maskBits=0;
  }
 else {
    maskBits=Integer.parseInt(parts[1]);
  }
  final String[] ipParts=StringUtils.split(ip,".");
  final int addr=Integer.parseInt(ipParts[0]) << 24 & 0xFF000000 | Integer.parseInt(ipParts[1]) << 16 & 0xFF0000 | Integer.parseInt(ipParts[2]) << 8 & 0xFF00 | Integer.parseInt(ipParts[3]) & 0xFF;
  final int mask=0xffffffff << 32 - maskBits;
  final int value=mask;
  final byte[] bytes=new byte[]{(byte)(value >>> 24),(byte)(value >> 16 & 0xff),(byte)(value >> 8 & 0xff),(byte)(value & 0xff)};
  final InetAddress netAddr=InetAddress.getByAddress(bytes);
  final int lowest=addr & mask;
  final String lowestIP=format(toArray(lowest));
  final int highest=lowest + ~mask;
  final String highestIP=format(toArray(highest));
  return lowestIP + "-" + highestIP;
}
