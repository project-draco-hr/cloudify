{
  JCloudsDeployer deployer=null;
  try {
    deployer=new JCloudsDeployer(config.getProvider(),config.getUser(),config.getApiKey());
    deployer.setMinRamMegabytes((int)config.getMachineMemoryMB());
    deployer.setImageId(config.getImageId());
    deployer.setHardwareId(config.getHardwareId());
    deployer.setSecurityGroup(config.getSecurityGroup());
    deployer.setKeyPair(config.getKeyPair());
    NodeMetadata server=null;
    System.out.println("Checking if server already exists.");
    server=deployer.getServerByTag(name);
    if (server != null && server.getState() == NodeState.PENDING) {
      throw new ElasticMachineProvisioningException("A server with tag " + name + " already exists, but it is in pending state");
    }
    if (server != null && server.getState() != NodeState.TERMINATED) {
      if (server.getPrivateAddresses().isEmpty()) {
        throw new ElasticMachineProvisioningException("A server with tag " + name + " already exists, but its private adresses are not available. State == "+ server.getState());
      }
      final String locator=(String)server.getPrivateAddresses().toArray()[0];
      System.out.println("Server " + name + " already exists, locator = "+ locator);
      return locator;
    }
    final NodeMetadata createdServer=ProvisionApp.createManagementServer(deployer,name,details,5,TimeUnit.MINUTES);
    final String locator=(String)createdServer.getPrivateAddresses().toArray()[0];
    return locator;
  }
  finally {
    if (deployer != null) {
      deployer.destroy();
    }
  }
}
