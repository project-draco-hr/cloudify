{
  ServerComposite existingComp=new ServerComposite(comp,new ServerComposite.ServerSelectionListener(){
    public void serverSelected(    IServer server){
      wizard.setMessage(null,IMessageProvider.NONE);
      if (server != null && module != null) {
        IStatus status=isSupportedModule(server,module);
        if (status != null) {
          if (status.getSeverity() == IStatus.ERROR)           wizard.setMessage(status.getMessage(),IMessageProvider.ERROR);
 else           if (status.getSeverity() == IStatus.WARNING)           wizard.setMessage(status.getMessage(),IMessageProvider.WARNING);
 else           if (status.getSeverity() == IStatus.INFO)           wizard.setMessage(status.getMessage(),IMessageProvider.INFORMATION);
          server=null;
        }
      }
      if (existingWC != null) {
        if (server != null && server.equals(existingWC.getOriginal()))         return;
        existingWC=null;
      }
      if (server != null)       existingWC=server.createWorkingCopy();
      if (server != null) {
        AzureServerWizardProperties.setWebServer(server);
      }
    }
  }
,module,launchMode);
  existingComp.setIncludeIncompatibleVersions(true);
  GridData data=new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_FILL);
  data.horizontalSpan=3;
  data.heightHint=250;
  existingComp.setLayoutData(data);
}
