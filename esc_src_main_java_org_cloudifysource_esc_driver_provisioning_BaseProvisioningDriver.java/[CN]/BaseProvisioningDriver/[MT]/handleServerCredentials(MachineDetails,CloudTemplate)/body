{
  File keyFile=null;
  String keyFileStr=template.getKeyFile();
  if (StringUtils.isNotBlank(keyFileStr)) {
    fixConfigRelativePaths(cloud,template);
    keyFile=new File(keyFileStr);
    if (!keyFile.isAbsolute()) {
      keyFile=new File(template.getLocalDirectory(),keyFileStr);
    }
    if (keyFile != null && !keyFile.exists()) {
      throw new CloudProvisioningException("The specified key file could not be found: " + keyFile.getAbsolutePath());
    }
  }
 else {
    String remotePassword=machineDetails.getRemotePassword();
    if (StringUtils.isNotBlank(remotePassword)) {
      if (CredentialUtils.isPrivateKeyCredential(remotePassword)) {
        logger.fine("Cloud has provided a key file for connections to new machines");
        try {
          keyFile=File.createTempFile("gs-esm-key",".pem");
          keyFile.deleteOnExit();
          FileUtils.write(keyFile,remotePassword);
          template.setKeyFile(keyFile.getAbsolutePath());
        }
 catch (        final IOException e) {
          throw new CloudProvisioningException("Failed to create a temporary " + "file for cloud server's key file",e);
        }
      }
 else {
        logger.fine("Cloud has provided a password for remote connections to new machines");
      }
    }
 else {
      logger.severe("No Password or key file specified in the cloud configuration file - connection to" + " the new machine is not possible.");
      throw new CloudProvisioningException("No credentials (password or key file) supplied with the cloud configuration file");
    }
  }
  logServerDetails(machineDetails,keyFile);
}
