{
  File tempFile=null;
  if (StringUtils.isBlank(machineDetails.getRemotePassword())) {
    if (StringUtils.isBlank(cloud.getUser().getKeyFile())) {
      logger.fine("No key file specified in the cloud configuration file");
      if (StringUtils.isBlank(cloud.getConfiguration().getRemotePassword())) {
        logger.severe("No Password or key file specified in the cloud configuration file - connection to" + " the new machine is not possible.");
        throw new CloudProvisioningException("No credentials (password or key file) supplied with the cloud configuration file");
      }
      machineDetails.setRemotePassword(cloud.getConfiguration().getRemotePassword());
    }
 else {
      tempFile=new File(cloud.getUser().getKeyFile());
    }
  }
 else   if (CredentialUtils.isPrivateKeyCredential(machineDetails.getRemotePassword())) {
    logger.fine("Cloud has provided a key file for connections to new machine");
    try {
      tempFile=File.createTempFile("gs-esm-key",".pem");
      tempFile.deleteOnExit();
      FileUtils.write(tempFile,machineDetails.getRemotePassword());
      cloud.getUser().setKeyFile(tempFile.getAbsolutePath());
    }
 catch (    final IOException e) {
      throw new CloudProvisioningException("Failed to create a temporary " + "file for cloud server's key file",e);
    }
  }
 else {
    logger.fine("Cloud has provided a password for remote connections to new machine");
    cloud.getConfiguration().setRemotePassword(machineDetails.getRemotePassword());
  }
  final File keyFile=tempFile;
  logServerDetails(machineDetails,keyFile);
}
