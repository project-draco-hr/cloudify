{
  try {
    String machineIp=null;
    if (machineDetails.isUsePrivateAddress()) {
      machineIp=machineDetails.getPrivateAddress();
    }
 else {
      machineIp=machineDetails.getPublicAddress();
    }
    if (machineIp != null && !machineIp.trim().isEmpty()) {
      try {
        final GridServiceAgent agent=getGSAByIpOrHost(machineIp);
        if (agent != null) {
          logger.info("handleExceptionAfterMachineCreated is shutting down agent: " + agent + " on host: "+ machineIp);
          agent.shutdown();
          logger.fine("Agent on host: " + machineIp + " successfully shut down");
        }
      }
 catch (      final Exception e) {
        logger.log(Level.WARNING,"Failed to shutdown agent on host: " + machineIp + ". Continuing with shutdown of "+ "machine.",e);
      }
    }
    logger.info("Stopping machine " + machineDetails.getPrivateAddress() + ", DEFAULT_SHUTDOWN_TIMEOUT_AFTER_PROVISION_FAILURE");
    this.cloudifyProvisioning.stopMachine(machineDetails.getPrivateAddress(),DEFAULT_SHUTDOWN_TIMEOUT_AFTER_PROVISION_FAILURE,TimeUnit.MINUTES);
  }
 catch (  final Exception e) {
    logger.log(Level.WARNING,"Machine Provisioning failed. " + "An error was encountered while trying to shutdown the new machine ( " + machineDetails.toString() + "). Error was: "+ e.getMessage(),e);
  }
}
