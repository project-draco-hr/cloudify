{
  StorageTemplate storageTemplate=this.cloud.getCloudStorage().getTemplates().get(this.storageTemplateName);
  boolean deleteOnExit=storageTemplate.isDeleteOnExit();
  if (!deleteOnExit) {
    return;
  }
  String namePrefix=storageTemplate.getNamePrefix();
  String id=attachedVolume.getId();
  Exception storageException=null;
  long end=System.currentTimeMillis() + DELETE_VOLUME_TIMEOUT_MILLIS;
  logger.info("Deleting volume with name prefix " + namePrefix + " having id "+ id);
  while (System.currentTimeMillis() < end) {
    try {
      this.storageProvisioning.deleteVolume("",id,duration,unit);
      logger.info("Volume with id " + id + " was deleted sucessfully");
      return;
    }
 catch (    StorageProvisioningException e) {
      logger.log(Level.INFO,"Failed deleting volume with id " + id + ". Volume could still be in use. Retrying.");
      storageException=e;
      Utils.threadSleep(VOLUNE_DELETION_RETRY_BETWEEN_ATTEMPTS_TIMEOUT_MILLIS);
    }
  }
  logger.log(Level.SEVERE,"Failed deleting volume with id " + id + ". There may still be leaking volumes.",storageException);
}
