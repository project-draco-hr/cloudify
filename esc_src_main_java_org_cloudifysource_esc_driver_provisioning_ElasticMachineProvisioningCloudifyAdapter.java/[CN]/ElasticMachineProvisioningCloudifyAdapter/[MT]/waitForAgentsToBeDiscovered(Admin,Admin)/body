{
  final long endTime=System.currentTimeMillis() + cloud.getConfiguration().getAdminLoadingTimeInSeconds() * MILLISECONDS_IN_SECOND;
  boolean esmAdminOk=false;
  Map<String,GridServiceContainer> undiscoveredAgentsContianersPerProcessingUnitInstanceName;
  while (System.currentTimeMillis() < endTime) {
    if (!esmAdminOk) {
      undiscoveredAgentsContianersPerProcessingUnitInstanceName=getUndiscoveredAgentsContianersPerProcessingUnitInstanceName(esmAdminInstance);
      if (undiscoveredAgentsContianersPerProcessingUnitInstanceName.isEmpty()) {
        esmAdminOk=true;
      }
 else {
        logger.info("Detected containers who's agent was not discovered yet : " + logContainers(undiscoveredAgentsContianersPerProcessingUnitInstanceName));
        logger.info("Sleeping for 5 seconds");
        Thread.sleep(DISCOVERY_INTERVAL);
      }
    }
 else {
      Set<String> esmAdminAgentUids=esmAdminInstance.getGridServiceAgents().getUids().keySet();
      Set<String> globalAdminAgentUids=globalAdminInstance.getGridServiceAgents().getUids().keySet();
      Set<String> agentsNotDiscoveredInGlobalAdminInstance=new HashSet<String>();
      for (      String agentUid : esmAdminAgentUids) {
        if (!globalAdminAgentUids.contains(agentUid)) {
          agentsNotDiscoveredInGlobalAdminInstance.add(agentUid);
        }
      }
      if (agentsNotDiscoveredInGlobalAdminInstance.isEmpty()) {
        logger.fine("All agents discovered by esm admin are discovered by cloud driver admin. " + "Machine provisioning will continue.");
        return;
      }
 else {
        logger.info("Detected agents that are discovered in the esm admin but not in the " + "cloud driver admin : " + agentsNotDiscoveredInGlobalAdminInstance + " . Waiting 5 seconds for agent discovery");
        Thread.sleep(DISCOVERY_INTERVAL);
      }
    }
  }
  throw new ElasticMachineProvisioningException("Cannot start a new machine when the admin " + "has not been synced properly");
}
