{
  final byte[] serviceCloudConfigurationContents=this.config.getServiceCloudConfiguration();
  logger.info("serviceCloudConfigurationContents is: " + serviceCloudConfigurationContents);
  if (serviceCloudConfigurationContents != null) {
    logger.info("Found service cloud configuration - saving to file");
    final File tempZipFile=File.createTempFile("__CLOUD_DRIVER_SERVICE_CONFIGURATION_FILE",".zip");
    FileUtils.writeByteArrayToFile(tempZipFile,serviceCloudConfigurationContents);
    logger.info("Wrote file: " + tempZipFile);
    final File tempServiceConfigurationDirectory=File.createTempFile("__CLOUD_DRIVER_SERVICE_CONFIGURATION_DIRECTORY",".tmp");
    logger.info("Unzipping file to: " + tempServiceConfigurationDirectory);
    FileUtils.forceDelete(tempServiceConfigurationDirectory);
    tempServiceConfigurationDirectory.mkdirs();
    ZipUtils.unzip(tempZipFile,tempServiceConfigurationDirectory);
    final File[] childFiles=tempServiceConfigurationDirectory.listFiles();
    logger.info("Unzipped configuration contained top-level entries: " + childFiles);
    if (childFiles.length != 1) {
      throw new BeanConfigurationException("Received a service cloud configuration file, " + "but root of zip file had more then one entry!");
    }
    final File serviceCloudConfigurationFile=childFiles[0];
    if (this.cloudifyProvisioning instanceof CustomServiceDataAware) {
      logger.info("Setting service cloud configuration in cloud driver to: " + serviceCloudConfigurationFile);
      final CustomServiceDataAware custom=(CustomServiceDataAware)this.cloudifyProvisioning;
      custom.setCustomDataFile(serviceCloudConfigurationFile);
    }
 else {
      throw new BeanConfigurationException("Cloud driver configuration inclouded a service cloud configuration file," + " but the cloud driver " + this.cloudifyProvisioning.getClass().getName() + " does not implement the "+ CustomServiceDataAware.class.getName()+ " interface");
    }
  }
}
