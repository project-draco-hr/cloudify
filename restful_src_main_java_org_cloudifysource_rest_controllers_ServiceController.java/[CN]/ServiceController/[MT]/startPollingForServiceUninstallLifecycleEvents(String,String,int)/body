{
  RestPollingCallable restPollingCallable;
  LifecycleEventsContainer lifecycleEventsContainer=new LifecycleEventsContainer();
  UUID lifecycleEventsContainerID=UUID.randomUUID();
  this.lifecyclePollingContainer.put(lifecycleEventsContainerID,lifecycleEventsContainer);
  lifecycleEventsContainer.setEventsSet(this.eventsSet);
  restPollingCallable=new RestPollingCallable(applicationName,timeoutInMinutes,TimeUnit.MINUTES);
  restPollingCallable.addService(serviceName,0);
  restPollingCallable.setIsServiceInstall(false);
  restPollingCallable.setAdmin(admin);
  restPollingCallable.setLifecycleEventsContainer(lifecycleEventsContainer);
  restPollingCallable.setIsUninstall(true);
  ScheduledFuture<?> scheduleWithFixedDelay=scheduledExecutor.scheduleWithFixedDelay(restPollingCallable,0,LIFECYCLE_EVENT_POLLING_INTERVAL,TimeUnit.SECONDS);
  lifecycleEventsContainer.setFutureTask(scheduleWithFixedDelay);
  logger.log(Level.INFO,"polling container UUID is " + lifecycleEventsContainerID.toString());
  return lifecycleEventsContainerID;
}
