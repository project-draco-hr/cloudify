{
  HttpPost postMethod=new HttpPost("http://" + address + "/service/templates/internal");
  String responseBody;
  HttpResponse httpResponse;
  logger.log(Level.INFO,"executeRestRequest - sending templates to rest instance " + address);
  try {
    DefaultHttpClient httpClient=new DefaultHttpClient();
    final MultipartEntity reqEntity=new MultipartEntity();
    final ByteArrayBody bin=new ByteArrayBody(templatesFolder.getBytes(),CloudifyConstants.REQUEST_PARAM_TEMPLATES_DIR_NAME);
    reqEntity.addPart(CloudifyConstants.REQUEST_PARAM_TEMPLATES_DIR_NAME,bin);
    postMethod.setEntity(reqEntity);
    httpResponse=httpClient.execute(postMethod);
    responseBody=RestUtils.getResponseBody(httpResponse,postMethod);
  }
 catch (  Exception e) {
    logger.log(Level.INFO,"executeRestRequest RestErrorException - failed_to_send_templates_to_rest:\n" + "while sending request to " + address + ", templates folder name: "+ templatesFolder.getName()+ ", error: "+ e.getMessage()+ ", cause msg: "+ e.getCause().getMessage());
    throw new RestErrorException("failed_to_send_templates_to_rest",templatesFolder.getName(),e.getCause().getMessage());
  }
  int statusCode=httpResponse.getStatusLine().getStatusCode();
  Object response=((Map<String,Object>)new ObjectMapper().readValue(responseBody,TypeFactory.type(Map.class))).get(RestUtils.RESPONSE_KEY);
  if (statusCode != HTTP_OK) {
    logger.log(Level.INFO,"executeRestRequest RestErrorException - failed_to_send_templates_to_rest:\n" + "while sending request to " + address + ", templates folder name: "+ templatesFolder.getName()+ ", got statusCode: "+ statusCode+ ", response: "+ response != null ? response.toString() : null);
    throw new RestErrorException("failed_to_send_templates_to_rest",templatesFolder.getName(),response != null ? response.toString() : null);
  }
  logger.log(Level.INFO,"executeRestRequest sent request to " + address + ", response: "+ response != null ? response.toString() : null);
  List<String> responseList=null;
  try {
    responseList=(List<String>)response;
  }
 catch (  ClassCastException e) {
    throw new RestErrorException("reponse_is_not_list",templatesFolder.getName(),address,response == null ? null : response.toString());
  }
  logger.log(Level.INFO,"Added " + responseList.size() + " templates to REST host address "+ address);
  return responseList;
}
