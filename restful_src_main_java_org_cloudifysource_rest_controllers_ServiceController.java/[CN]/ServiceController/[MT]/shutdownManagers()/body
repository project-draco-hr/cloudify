{
  if (this.cloud == null) {
    throw new RestErrorException(CloudifyErrorMessages.MANAGEMENT_SERVERS_SHUTDOWN_NOT_ALLOWED_ON_LOCALCLOUD.getName());
  }
  final ProcessingUnitInstance[] instances=getManagementInstances();
  final ControllerDetails[] controllers=createControllerDetails(instances);
  final GridServiceAgent[] agents=new GridServiceAgent[instances.length];
  for (int i=0; i < instances.length; i++) {
    final ProcessingUnitInstance instance=instances[i];
    final GridServiceAgent agent=instance.getGridServiceContainer().getGridServiceAgent();
    if (agent == null) {
      throw new IllegalStateException("Failed to find agent for management instance: " + instance.getProcessingUnitInstanceName());
    }
    agents[i]=agent;
  }
  final Map<String,Object> map=successStatus(controllers);
  new Thread(new Runnable(){
    @Override public void run(){
      logger.info("Shutdown of management agent will commence in: " + MANAGEMENT_AGENT_SHUTDOWN_INTERNAL_SECONDS + " seconds");
      try {
        Thread.sleep(TimeUnit.SECONDS.toMillis(MANAGEMENT_AGENT_SHUTDOWN_INTERNAL_SECONDS));
      }
 catch (      final InterruptedException e) {
      }
      logger.info("Initiating shutdown of management agents");
      for (      final GridServiceAgent agent : agents) {
        logger.info("Shutting down agent: " + getAgentDescription(agent));
        try {
          agent.shutdown();
        }
 catch (        final Exception e) {
          logger.log(Level.WARNING,"Attempt to shutdown management agent failed: " + e.getMessage(),e);
        }
      }
    }
  }
).start();
  return map;
}
