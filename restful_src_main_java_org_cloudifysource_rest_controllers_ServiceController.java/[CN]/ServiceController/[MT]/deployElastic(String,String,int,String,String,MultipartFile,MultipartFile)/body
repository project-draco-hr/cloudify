{
  logger.info("Deploying service with template: " + templateName);
  String actualTemplateName=templateName;
  if (cloud != null) {
    if (templateName == null || templateName.length() == 0) {
      if (cloud.getTemplates().isEmpty()) {
        throw new IllegalStateException("Cloud configuration has no compute template defined!");
      }
      actualTemplateName=cloud.getTemplates().keySet().iterator().next();
      logger.warning("Compute Template name missing from service deployment request." + " Defaulting to first template: " + actualTemplateName);
    }
  }
  final String absolutePuName=ServiceUtils.getAbsolutePUName(applicationName,serviceName);
  final byte[] propsBytes=propsFile.getBytes();
  final Properties props=new Properties();
  final InputStream is=new ByteArrayInputStream(propsBytes);
  props.load(is);
  final File dest=copyMultipartFileToLocalFile(srcFile);
  final File destFile=new File(dest.getParent(),absolutePuName + "." + FilenameUtils.getExtension(dest.getName()));
  if (destFile.exists()) {
    FileUtils.deleteQuietly(destFile);
  }
  String lifecycleEventsContainerID="";
  if (dest.renameTo(destFile)) {
    FileUtils.deleteQuietly(dest);
    lifecycleEventsContainerID=deployElasticProcessingUnit(absolutePuName,applicationName,zone,destFile,props,actualTemplateName,false,timeout,TimeUnit.MINUTES,null);
    destFile.deleteOnExit();
  }
 else {
    logger.warning("Deployment file could not be renamed to the absolute pu name." + " Deploaying using the name " + dest.getName());
    lifecycleEventsContainerID=deployElasticProcessingUnit(absolutePuName,applicationName,zone,dest,props,actualTemplateName,false,timeout,TimeUnit.MINUTES,null);
    dest.deleteOnExit();
  }
  return successStatus(lifecycleEventsContainerID.toString());
}
