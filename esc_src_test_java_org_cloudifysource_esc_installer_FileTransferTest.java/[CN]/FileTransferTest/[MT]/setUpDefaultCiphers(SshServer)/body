{
  List<NamedFactory<Cipher>> avail=new LinkedList<NamedFactory<Cipher>>();
  avail.add(new AES128CTR.Factory());
  avail.add(new AES256CTR.Factory());
  avail.add(new ARCFOUR128.Factory());
  avail.add(new ARCFOUR256.Factory());
  avail.add(new AES128CBC.Factory());
  avail.add(new TripleDESCBC.Factory());
  avail.add(new BlowfishCBC.Factory());
  avail.add(new AES192CBC.Factory());
  avail.add(new AES256CBC.Factory());
  for (Iterator<NamedFactory<Cipher>> i=avail.iterator(); i.hasNext(); ) {
    final NamedFactory<Cipher> f=i.next();
    try {
      final Cipher c=f.create();
      final byte[] key=new byte[c.getBlockSize()];
      final byte[] iv=new byte[c.getIVSize()];
      c.init(Cipher.Mode.Encrypt,key,iv);
    }
 catch (    InvalidKeyException e) {
      i.remove();
    }
catch (    Exception e) {
      i.remove();
    }
  }
  sshd.setCipherFactories(avail);
}
