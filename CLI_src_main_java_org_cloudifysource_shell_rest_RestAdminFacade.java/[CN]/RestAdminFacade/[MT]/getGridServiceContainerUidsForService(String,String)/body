{
  final Set<String> containerUids=new HashSet<String>();
  final int numberOfInstances=this.getInstanceList(applicationName,serviceName).size();
  final String absolutePUName=ServiceUtils.getAbsolutePUName(applicationName,serviceName);
  for (int i=0; i < numberOfInstances; i++) {
    final String containerUrl="applications/Names/" + applicationName + "/ProcessingUnits/Names/"+ absolutePUName+ "/Instances/"+ i+ "/GridServiceContainer/Uid";
    try {
      final Map<String,Object> container=client.getAdmin(containerUrl);
      if (container == null) {
        throw new IllegalStateException("Could not find container " + containerUrl);
      }
      if (!container.containsKey("Uid")) {
        throw new IllegalStateException("Could not find AgentUid of container " + containerUrl);
      }
      containerUids.add((String)container.get("Uid"));
    }
 catch (    final ErrorStatusException e) {
      throw new CLIStatusException(e,e.getReasonCode(),e.getArgs());
    }
catch (    final RestException e) {
      throw new CLIStatusException(e,"cant_find_service_for_app",serviceName,applicationName);
    }
  }
  return containerUids;
}
