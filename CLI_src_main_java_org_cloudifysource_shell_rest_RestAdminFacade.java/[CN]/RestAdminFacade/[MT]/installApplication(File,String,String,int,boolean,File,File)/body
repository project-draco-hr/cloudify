{
  final String url=SERVICE_CONTROLLER_URL + "applications/" + applicationName+ "/timeout/"+ timeout+ "?selfHealing="+ Boolean.toString(selfHealing);
  final Map<String,File> filesToPost=new HashMap<String,File>();
  filesToPost.put("file",applicationFile);
  filesToPost.put(CloudifyConstants.CLOUD_OVERRIDES_FILE_PARAM,cloudOverrides);
  filesToPost.put(CloudifyConstants.APPLICATION_OVERRIDES_FILE_PARAM,applicationOverrides);
  try {
    if (org.apache.commons.lang.StringUtils.isBlank(authGroups)) {
      return (Map<String,String>)client.postFiles(url,null,null,filesToPost);
    }
    final Map<String,String> paramsMap=new HashMap<String,String>();
    paramsMap.put("authGroups",authGroups);
    return (Map<String,String>)client.postFiles(url,null,paramsMap,filesToPost);
  }
 catch (  final ErrorStatusException e) {
    throw new CLIStatusException(e,e.getReasonCode(),e.getArgs());
  }
catch (  final RestException e) {
    throw new CLIException(e);
  }
}
