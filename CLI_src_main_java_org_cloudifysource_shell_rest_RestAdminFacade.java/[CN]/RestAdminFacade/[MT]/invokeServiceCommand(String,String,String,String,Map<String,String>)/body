{
  final String url=SERVICE_CONTROLLER_URL + "applications/" + applicationName+ "/services/"+ serviceName+ "/beans/"+ beanName+ "/invoke";
  Object result=null;
  try {
    result=client.post(url,buildCustomCommandParams(commandName,params));
  }
 catch (  final ErrorStatusException e) {
    throw new CLIStatusException(e,e.getReasonCode(),e.getArgs());
  }
catch (  final RestException e) {
    throw new CLIException(e);
  }
  @SuppressWarnings("unchecked") final Map<String,Object> restResult=(Map<String,Object>)result;
  final Map<String,InvocationResult> invocationResultMap=new LinkedHashMap<String,InvocationResult>();
  for (  final Map.Entry<String,Object> entry : restResult.entrySet()) {
    final Object value=entry.getValue();
    if (!(value instanceof Map<?,?>)) {
      logger.severe("Received an unexpected return value to the invoke command. Key: " + entry.getKey() + ", value: "+ value);
    }
 else {
      @SuppressWarnings("unchecked") final Map<String,String> curr=(Map<String,String>)value;
      final InvocationResult invocationResult=InvocationResult.createInvocationResult(curr);
      invocationResultMap.put(entry.getKey(),invocationResult);
    }
  }
  return invocationResultMap;
}
