{
  VolumeDetails volumeDetails=new VolumeDetails();
  if (!volumeApi.isPresent()) {
    throw new StorageProvisioningException("Failed to provision storage volume on Openstack. ");
  }
  while (true) {
    final Volume volume=volumeApi.get().get(volumeId);
    if (volume != null) {
      Volume.Status volumeStatus=volume.getStatus();
      if (volumeStatus == Volume.Status.AVAILABLE) {
        volumeDetails.setId(volume.getId());
        volumeDetails.setName(volume.getName());
        volumeDetails.setSize(volume.getSize());
        volumeDetails.setLocation(volume.getZone());
        logger.fine("Volume provisioned: " + volumeDetails.toString());
        break;
      }
 else       if (volumeStatus == Volume.Status.ERROR) {
        throw new StorageProvisioningException("Failed to create storage volume on Openstack. " + "Volume id: " + volumeId);
      }
 else       if (volumeStatus == Volume.Status.DELETING || volumeStatus == Volume.Status.IN_USE || volumeStatus == Volume.Status.UNRECOGNIZED) {
        throw new StorageProvisioningException("Failed to create storage volume on Openstack, " + "unexpected volume status reported: " + volumeStatus + ". Volume id "+ volumeId);
      }
      if (System.currentTimeMillis() > endTime) {
        throw new TimeoutException("timeout creating volume. status:" + volume.getStatus());
      }
    }
    Thread.sleep(VOLUME_POLLING_INTERVAL_MILLIS);
  }
  return volumeDetails;
}
