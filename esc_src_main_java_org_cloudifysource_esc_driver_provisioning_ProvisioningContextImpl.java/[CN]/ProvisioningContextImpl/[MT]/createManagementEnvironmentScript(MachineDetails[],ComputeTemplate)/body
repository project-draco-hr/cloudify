{
  if (mds == null || mds.length == 0) {
    throw new IllegalArgumentException("mds must have at least one element");
  }
  final String[] result=new String[mds.length];
  ScriptLanguages scriptLanguage=template.getScriptLanguage();
  InstallationDetails installationDetails=installationDetailsBuilder.build();
  Cloud cloud=this.installationDetailsBuilder.getCloud();
  final String lookupLocatorsString=createLocatorsString(mds,cloud);
  installationDetails.setLocator(lookupLocatorsString);
  for (int i=0; i < mds.length; i++) {
    MachineDetails md=mds[i];
    Map<String,String> externalEnvVars=template.getEnv();
    EnvironmentFileBuilder fileBuilder=new EnvironmentFileBuilder(scriptLanguage,externalEnvVars);
    installationDetails.setNoWebServices(i != 0);
    fileBuilder.loadEnvironmentFileFromDetails(installationDetails);
    fileBuilder.build();
    final String fileContents=fileBuilder.toString();
    result[i]=fileContents;
  }
  return result;
}
