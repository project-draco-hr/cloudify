{
  Map<String,CloudTemplate> cloudTemplatesMap=cloud.getTemplates();
  List<String> cloudTemplateNames=new LinkedList<String>(cloudTemplatesMap.keySet());
  List<String> deployerTemplateNames=deployer.getTemplatesList();
  List<String> redundantTempaltes=new LinkedList<String>(deployerTemplateNames);
  redundantTempaltes.removeAll(cloudTemplateNames);
  if (!redundantTempaltes.isEmpty()) {
    logger.info("initDeployer - found redundant templates: " + redundantTempaltes);
    deployer.removeTemplates(redundantTempaltes);
  }
  List<String> missingTempaltes=new LinkedList<String>(cloudTemplateNames);
  missingTempaltes.removeAll(deployerTemplateNames);
  if (!missingTempaltes.isEmpty()) {
    logger.info("initDeployer - found missing templates: " + missingTempaltes);
    Map<String,CloudTemplate> templatesMap=new HashMap<String,CloudTemplate>();
    for (    String templateName : missingTempaltes) {
      CloudTemplate cloudTemplate=cloudTemplatesMap.get(templateName);
      templatesMap.put(templateName,cloudTemplate);
    }
    addTempaltesToDeployer(deployer,templatesMap);
  }
}
