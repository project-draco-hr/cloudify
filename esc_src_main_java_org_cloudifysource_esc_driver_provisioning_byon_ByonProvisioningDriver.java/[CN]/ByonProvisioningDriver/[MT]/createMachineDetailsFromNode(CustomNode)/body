{
  final ComputeTemplate template=this.cloud.getCloudCompute().getTemplates().get(this.cloudTemplateName);
  final MachineDetails md=createMachineDetailsForTemplate(template);
  md.setMachineId(node.getId());
  md.setPrivateAddress(node.getPrivateIP());
  md.setPublicAddress(node.getPublicIP());
  if (StringUtils.isNotBlank(node.getUsername()) && StringUtils.isNotBlank(node.getKeyFile())) {
    md.setRemoteUsername(node.getUsername());
    setKeyFile(md,node.getKeyFile(),template.getAbsoluteUploadDir());
  }
 else   if (StringUtils.isNotBlank(node.getUsername()) && StringUtils.isNotBlank(node.getCredential())) {
    md.setRemoteUsername(node.getUsername());
    md.setRemotePassword(node.getCredential());
  }
 else   if (StringUtils.isNotBlank(template.getUsername()) && StringUtils.isNotBlank(template.getKeyFile())) {
    md.setRemoteUsername(template.getUsername());
    setKeyFile(md,template.getKeyFile(),template.getAbsoluteUploadDir());
  }
 else   if (StringUtils.isNotBlank(template.getUsername()) && StringUtils.isNotBlank(template.getPassword())) {
    md.setRemoteUsername(template.getUsername());
    md.setRemotePassword(template.getPassword());
  }
 else {
    final String nodeStr=node.toString();
    logger.severe("Cloud node loading failed, missing credentials for server: " + nodeStr);
    publishEvent("prov_node_loading_failed",nodeStr);
    throw new CloudProvisioningException("Cloud node loading failed, missing credentials for server: " + nodeStr);
  }
  md.setOpenFilesLimit(template.getOpenFilesLimit());
  return md;
}
