{
  boolean hasExtendedServices=false;
  for (  final Service service : application.getServices()) {
    if (!service.getExtendedServicesPaths().isEmpty()) {
      hasExtendedServices=true;
      break;
    }
  }
  File applicationFolderToPack=applicationDir;
  if (hasExtendedServices) {
    final File destApplicationFolder=createCopyDirectory(applicationFolderToPack);
    for (    final Service service : application.getServices()) {
      final File extFolder=new File(destApplicationFolder + "/" + service.getName());
      final File recipeFile=DSLReader.findDefaultDSLFile(DSLReader.SERVICE_DSL_FILE_NAME_SUFFIX,new File(applicationDir + "/" + service.getName()));
      copyExtendedServiceFiles(service,recipeFile,extFolder);
    }
    applicationFolderToPack=destApplicationFolder;
  }
  if (additionalServiceFiles != null && additionalServiceFiles.length > 0) {
    if (applicationFolderToPack == applicationDir) {
      applicationFolderToPack=createCopyDirectory(applicationFolderToPack);
    }
    final List<Service> services=application.getServices();
    for (    final Service service : services) {
      final File serviceDir=new File(applicationFolderToPack,service.getName());
      if (!serviceDir.exists()) {
        throw new PackagingException("Could not find service folder at: " + serviceDir);
      }
      if (!serviceDir.isDirectory()) {
        throw new PackagingException("Was expecting a directory at: " + serviceDir);
      }
      for (      final File fileToCopy : additionalServiceFiles) {
        FileUtils.copyFileToDirectory(fileToCopy,serviceDir);
      }
    }
  }
  final File zipFile=File.createTempFile("application",".zip");
  zipFile.deleteOnExit();
  ZipUtils.zip(applicationFolderToPack,zipFile);
  return zipFile;
}
