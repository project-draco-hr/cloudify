{
  final EnvironmentFileBuilder builder=this;
  String remoteDirectory=details.getRemoteDir();
  if (remoteDirectory.endsWith("/")) {
    remoteDirectory=remoteDirectory.substring(0,remoteDirectory.length() - 1);
  }
  if (details.isManagement()) {
    remoteDirectory=remoteDirectory + "/" + details.getRelativeLocalDir();
  }
  String authGroups=null;
  if (details.getAuthGroups() != null) {
    authGroups=details.getAuthGroups();
  }
  final String springProfiles=createSpringProfilesString(details);
  String safePublicIpAddress=IPUtils.getSafeIpAddress(details.getPublicIp());
  String safePrivateIpAddress=IPUtils.getSafeIpAddress(details.getPrivateIp());
  builder.exportVar(LUS_IP_ADDRESS_ENV,details.getLocator()).exportVar(GSA_MODE_ENV,details.isManagement() ? "lus" : "agent").exportVar(CloudifyConstants.SPRING_ACTIVE_PROFILE_ENV_VAR,springProfiles).exportVar(NO_WEB_SERVICES_ENV,details.isNoWebServices() ? "true" : "false").exportVar(NO_MANAGEMENT_SPACE_ENV,details.isNoManagementSpace() ? "true" : "false").exportVar(NO_MANAGEMENT_SPACE_CONTAINER_ENV,details.isNoManagementSpaceContainer() ? "true" : "false").exportVar(CloudifyConstants.CLOUDIFY_CLOUD_MACHINE_IP_ADDRESS_ENV,details.isBindToPrivateIp() ? safePrivateIpAddress : safePublicIpAddress).exportVar(CloudifyConstants.CLOUDIFY_LINK_ENV,details.getCloudifyUrl()).exportVar(CloudifyConstants.CLOUDIFY_OVERRIDES_LINK_ENV,details.getOverridesUrl()).exportVar(WORKING_HOME_DIRECTORY_ENV,remoteDirectory).exportVar(AUTO_RESTART_AGENT,details.getAutoRestartAgent()).exportVar(CloudifyConstants.GIGASPACES_AUTH_GROUPS,authGroups).exportVar(CloudifyConstants.GIGASPACES_AGENT_ENV_PRIVATE_IP,safePrivateIpAddress).exportVar(CloudifyConstants.GIGASPACES_AGENT_ENV_PUBLIC_IP,safePublicIpAddress).exportVar(CloudifyConstants.GIGASPACES_CLOUD_TEMPLATE_NAME,details.getTemplateName()).exportVar(CloudifyConstants.GIGASPACES_CLOUD_MACHINE_ID,details.getMachineId()).exportVar(CloudifyConstants.CLOUDIFY_CLOUD_MACHINE_ID,details.getMachineId()).exportVar(CloudifyConstants.CLOUDIFY_AGENT_ENV_PRIVATE_IP,safePrivateIpAddress).exportVar(CloudifyConstants.CLOUDIFY_CLOUD_LOCATION_ID,details.getLocationId()).exportVar(CloudifyConstants.USM_ATTRIBUTES_STORE_DISCOVERY_TIMEOUT_ENV_VAR,details.getAttributesStoreDiscoveryTimeout().toString()).exportVar(CloudifyConstants.CLOUDIFY_AGENT_ENV_PUBLIC_IP,safePublicIpAddress);
  if (details.isManagement()) {
    String remotePath=details.getRemoteDir();
    if (!remotePath.endsWith("/")) {
      remotePath+="/";
    }
    builder.exportVar(CLOUD_FILE,remotePath + details.getCloudFile().getName());
    logger.log(Level.FINE,"Setting ESM/GSM/LUS java options.");
    builder.exportVar("ESM_JAVA_OPTIONS",details.getEsmCommandlineArgs());
    builder.exportVar("LUS_JAVA_OPTIONS",details.getLusCommandlineArgs());
    builder.exportVar("GSM_JAVA_OPTIONS",details.getGsmCommandlineArgs());
    logger.log(Level.FINE,"Setting gsc lrmi port-range and custom rest/webui ports.");
    builder.exportVar(CloudifyConstants.GSC_LRMI_PORT_RANGE_ENVIRONMENT_VAR,details.getGscLrmiPortRange());
    builder.exportVar(CloudifyConstants.REST_PORT_ENV_VAR,details.getRestPort().toString());
    builder.exportVar(CloudifyConstants.REST_MAX_MEMORY_ENVIRONMENT_VAR,details.getRestMaxMemory());
    builder.exportVar(CloudifyConstants.WEBUI_PORT_ENV_VAR,details.getWebuiPort().toString());
    builder.exportVar(CloudifyConstants.WEBUI_MAX_MEMORY_ENVIRONMENT_VAR,details.getWebuiMaxMemory());
  }
  logger.log(Level.FINE,"Setting GSA java options.");
  builder.exportVar("GSA_JAVA_OPTIONS",details.getGsaCommandlineArgs());
  if (details.getUsername() != null) {
    builder.exportVar("USERNAME",details.getUsername());
  }
  if (details.getPassword() != null) {
    builder.exportVar("PASSWORD",details.getPassword());
  }
  builder.exportVar(CloudifyConstants.SPRING_SECURITY_CONFIG_FILE_ENV_VAR,details.getRemoteDir() + "/" + CloudifyConstants.SECURITY_FILE_NAME);
  if (StringUtils.isNotBlank(details.getKeystorePassword())) {
    builder.exportVar(CloudifyConstants.KEYSTORE_FILE_ENV_VAR,details.getRemoteDir() + "/" + CloudifyConstants.KEYSTORE_FILE_NAME);
    builder.exportVar(CloudifyConstants.KEYSTORE_PASSWORD_ENV_VAR,details.getKeystorePassword());
  }
  if (details.getOpenFilesLimit() != null) {
    builder.exportVar(CloudifyConstants.CLOUDIFY_OPEN_FILES_LIMIT,details.getOpenFilesLimit());
  }
}
