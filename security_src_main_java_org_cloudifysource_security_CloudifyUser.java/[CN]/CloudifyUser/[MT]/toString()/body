{
  StringBuilder sb=new StringBuilder();
  sb.append(super.toString()).append(": ");
  sb.append("Username: ").append(getUsername()).append("; ");
  sb.append("Password: [PROTECTED]; ");
  sb.append("Enabled: ").append(isEnabled()).append("; ");
  sb.append("AccountNonExpired: ").append(isAccountNonExpired()).append("; ");
  sb.append("credentialsNonExpired: ").append(isCredentialsNonExpired()).append("; ");
  sb.append("AccountNonLocked: ").append(isAccountNonLocked()).append("; ");
  Collection<? extends GrantedAuthority> authorities=getAuthorities();
  if (!authorities.isEmpty()) {
    sb.append("Granted Authorities: ");
    boolean first=true;
    for (    GrantedAuthority role : authorities) {
      if (!first) {
        sb.append(",");
      }
      first=false;
      sb.append(role);
    }
  }
 else {
    sb.append("Not granted any authorities (roles)");
  }
  sb.append("; ");
  Collection<String> authGroups=getAuthGroups();
  if (!authGroups.isEmpty()) {
    sb.append("Authorization Groups: ");
    boolean first=true;
    for (    String authGroup : authGroups) {
      if (!first) {
        sb.append(",");
      }
      first=false;
      sb.append(authGroup);
    }
  }
 else {
    sb.append("Not granted any aothorization groups");
  }
  return sb.toString();
}
