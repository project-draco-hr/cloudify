{
  String providerName=cloud.getProvider().getProvider();
  String apiId;
  boolean endpointRequired=false;
  try {
    publishOngoingEvent(CloudifyErrorMessages.EVENT_VALIDATING_PROVIDER_OR_API_NAME.getName(),providerName);
    ProviderMetadata providerMetadata=Providers.withId(providerName);
    ApiMetadata apiMetadata=providerMetadata.getApiMetadata();
    apiId=apiMetadata.getId();
    publishEventEnd(true,VALIDATION_SUCCESS_MESSAGE);
  }
 catch (  NoSuchElementException e) {
    try {
      ApiMetadata apiMetadata=Apis.withId(providerName);
      apiId=apiMetadata.getId();
      endpointRequired=true;
      publishEventEnd(true,VALIDATION_SUCCESS_MESSAGE);
    }
 catch (    NoSuchElementException ex) {
      publishEventEnd(false,VALIDATION_FAILURE_MESSAGE);
      throw new CloudProvisioningException("Provider not supported: " + providerName,ex);
    }
  }
  String cloudifyUrl=cloud.getProvider().getCloudifyUrl();
  if (cloudifyUrl.endsWith(".zip") || cloudifyUrl.endsWith(".tar.gz")) {
    validateCloudifyUrl(cloudifyUrl);
  }
 else {
    validateCloudifyUrl(cloudifyUrl + ".zip");
    validateCloudifyUrl(cloudifyUrl + ".tar.gz");
  }
  validateComputeTemplates(endpointRequired,apiId);
}
