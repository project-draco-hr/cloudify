{
  JCloudsDeployer effectiveDeployer=null;
  String templateName="";
  try {
    for (    Entry<String,ComputeTemplate> entry : cloud.getCloudCompute().getTemplates().entrySet()) {
      templateName=entry.getKey();
      publishEvent(CloudifyErrorMessages.EVENT_VALIDATING_TEMPLATE.getName(),templateName);
      ComputeTemplate template=entry.getValue();
      effectiveDeployer=validationDeployer;
      final Properties templateProps=new Properties();
      Map<String,Object> templateOverrides=template.getOverrides();
      templateProps.putAll(templateOverrides);
      Properties deployerProps=validationDeployer.getOverrides();
      if (!deployerProps.equals(templateProps)) {
        publishEvent(CloudifyErrorMessages.EVENT_VALIDATING_TEMPLATE_OVERRIDES.getName());
        try {
          logger.info("Creating a new cloud deployer");
          effectiveDeployer=new JCloudsDeployer(cloud.getProvider().getProvider(),cloud.getUser().getUser(),cloud.getUser().getApiKey(),templateProps);
        }
 catch (        IOException e) {
          closeDeployer(effectiveDeployer);
          throw new CloudProvisioningException("Authentication to the cloud failed");
        }
      }
      effectiveDeployer.setImageId(template.getImageId());
      effectiveDeployer.setHardwareId(template.getHardwareId());
      effectiveDeployer.setExtraOptions(template.getOptions());
      publishEvent(CloudifyErrorMessages.EVENT_VALIDATING_IMAGE_ID.getName(),template.getImageId() == null ? "" : template.getImageId());
      publishEvent(CloudifyErrorMessages.EVENT_VALIDATING_HARDWARE_ID.getName(),template.getHardwareId() == null ? "" : template.getHardwareId());
      publishEvent(CloudifyErrorMessages.EVENT_VALIDATING_LOCATION_ID.getName(),template.getLocationId() == null ? "" : template.getLocationId());
      effectiveDeployer.getTemplate(template.getLocationId());
      publishEvent(CloudifyErrorMessages.EVENT_TEMPLATE_VALIDATED.getName(),templateName);
      closeDeployer(effectiveDeployer);
    }
  }
 catch (  Exception e) {
    throw new CloudProvisioningException("Invalid configuration for template \"" + templateName + "\", "+ e.getMessage());
  }
 finally {
    closeDeployer(effectiveDeployer);
  }
}
