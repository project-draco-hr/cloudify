{
  final String credential=server.getCredentials().credential;
  File tempFile=null;
  if (credential == null) {
    logger.fine("Cloud did not provide server credentials, checking in cloud configuration file");
    if ((cloud.getUser().getKeyFile() == null) || (cloud.getUser().getKeyFile().length() == 0)) {
      logger.fine("No key file specified in cloud configuration");
      if (cloud.getConfiguration().getRemotePassword() == null) {
        logger.severe("No Password specified in cloud configuration - connection to the new machine is not possible.");
        throw new CloudProvisioningException("Cloud did not provider server credentials, and no credentials (password or key file) supplied with cloud configuration file");
      }
      md.setRemotePassword(cloud.getConfiguration().getRemotePassword());
    }
 else {
      tempFile=new File(cloud.getUser().getKeyFile());
    }
  }
 else   if (credential.startsWith("-----BEGIN RSA PRIVATE KEY-----")) {
    try {
      tempFile=File.createTempFile("gs-esm-key",".pem");
      FileUtils.write(tempFile,credential);
      cloud.getUser().setKeyFile(tempFile.getAbsolutePath());
    }
 catch (    final IOException e) {
      throw new CloudProvisioningException("Failed to create a temporary file for cloud server's key file",e);
    }
  }
 else {
    logger.fine("Cloud has provided password for remote connection to new machine");
    cloud.getConfiguration().setRemotePassword(server.getCredentials().credential);
  }
  final File keyFile=tempFile;
  logServerDetails(server,keyFile);
}
