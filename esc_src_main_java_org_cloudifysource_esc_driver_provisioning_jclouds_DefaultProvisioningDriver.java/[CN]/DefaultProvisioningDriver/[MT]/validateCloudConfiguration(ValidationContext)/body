{
  final String providerName=cloud.getProvider().getProvider();
  String cloudFolder=CLOUDS_FOLDER_PATH + FILE_SEPARATOR + cloud.getName();
  groovyFile=cloudFolder + FILE_SEPARATOR + cloud.getName()+ "-cloud.groovy";
  propertiesFile=cloudFolder + FILE_SEPARATOR + cloud.getName()+ "-cloud.properties";
  String apiId;
  boolean endpointRequired=false;
  try {
    validationContext.validationOngoingEvent(ValidationMessageType.TOP_LEVEL_VALIDATION_MESSAGE,getFormattedMessage("validating_provider_or_api_name",providerName));
    final ProviderMetadata providerMetadata=Providers.withId(providerName);
    final ApiMetadata apiMetadata=providerMetadata.getApiMetadata();
    apiId=apiMetadata.getId();
    validationContext.validationEventEnd(ValidationResultType.OK);
  }
 catch (  final NoSuchElementException e) {
    try {
      final ApiMetadata apiMetadata=Apis.withId(providerName);
      apiId=apiMetadata.getId();
      endpointRequired=true;
      validationContext.validationEventEnd(ValidationResultType.OK);
    }
 catch (    final NoSuchElementException ex) {
      validationContext.validationEventEnd(ValidationResultType.ERROR);
      throw new CloudProvisioningException(getFormattedMessage("error_provider_or_api_name_validation",providerName,cloudFolder),ex);
    }
  }
  validateComputeTemplates(endpointRequired,apiId,validationContext);
}
