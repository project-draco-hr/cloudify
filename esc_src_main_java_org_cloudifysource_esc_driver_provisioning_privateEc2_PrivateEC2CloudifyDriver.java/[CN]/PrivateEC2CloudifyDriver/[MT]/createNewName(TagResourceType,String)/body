{
  String newName=null;
  int attempts=0;
  boolean foundFreeName=false;
  while (attempts < MAX_SERVERS_LIMIT) {
    ++attempts;
switch (resourceType) {
case INSTANCE:
      newName=prefix + counter.incrementAndGet();
    break;
case VOLUME:
  newName=prefix + volumeCounter.incrementAndGet();
break;
default :
throw new CloudProvisioningException("ResourceType not supported");
}
final DescribeTagsRequest tagRequest=new DescribeTagsRequest();
tagRequest.withFilters(new Filter("resource-type",Arrays.asList(resourceType.getValue())));
tagRequest.withFilters(new Filter("value",Arrays.asList(newName)));
final DescribeTagsResult describeTags=ec2.describeTags(tagRequest);
final List<TagDescription> tags=describeTags.getTags();
if (tags == null || tags.isEmpty()) {
foundFreeName=true;
break;
}
}
if (!foundFreeName) {
throw new CloudProvisioningException("Number of servers has exceeded allowed server limit (" + MAX_SERVERS_LIMIT + ")");
}
return newName;
}
