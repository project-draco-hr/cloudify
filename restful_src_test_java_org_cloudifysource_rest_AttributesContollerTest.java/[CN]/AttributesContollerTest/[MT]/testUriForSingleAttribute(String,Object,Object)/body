{
  final HashMap<String,HandlerMethod> uriHandlers=singleAttributeUrisMapping.get(requestUri);
  MockHttpServletRequest reqeust;
  final Map<String,Object> expectedMap=new HashMap<String,Object>();
  expectedMap.put(ATTRIBUTE_NAME,null);
  System.out.println("testing uri: " + requestUri);
  reqeust=createMockGetRequest(requestUri);
  testRequest(reqeust,uriHandlers.get(HTTP_GET),convertToJson(expectedMap));
  reqeust=createMockPostRequest(requestUri,convertToJson(attrInitialValue));
  testRequest(reqeust,uriHandlers.get(HTTP_POST),convertToJson(expectedMap));
  reqeust=createMockPostRequest(requestUri,convertToJson(attrUpdatedValue));
  expectedMap.put(ATTRIBUTE_NAME,attrInitialValue);
  testRequest(reqeust,uriHandlers.get(HTTP_POST),convertToJson(expectedMap));
  reqeust=createMockGetRequest(requestUri);
  expectedMap.put(ATTRIBUTE_NAME,attrUpdatedValue);
  testRequest(reqeust,uriHandlers.get(HTTP_GET),convertToJson(expectedMap));
  reqeust=createMockDeleteRequest(requestUri);
  testRequest(reqeust,uriHandlers.get(HTTP_DELETE),convertToJson(expectedMap));
  reqeust=createMockGetRequest(requestUri);
  expectedMap.put(ATTRIBUTE_NAME,null);
  testRequest(reqeust,uriHandlers.get(HTTP_GET),convertToJson(expectedMap));
  System.out.println("finished test for uri: " + requestUri);
}
