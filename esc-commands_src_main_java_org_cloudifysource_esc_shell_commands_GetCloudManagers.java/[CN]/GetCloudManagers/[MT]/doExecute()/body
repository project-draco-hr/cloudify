{
  if (cloudOverrides != null) {
    if (cloudOverrides.length() >= TEN_K) {
      throw new CLIStatusException(CloudifyErrorMessages.CLOUD_OVERRIDES_TO_LONG.getName());
    }
  }
  final RecipePathResolver pathResolver=new RecipePathResolver();
  File providerDirectory=null;
  if (pathResolver.resolveCloud(this.getCloudProvider())) {
    providerDirectory=pathResolver.getResolved();
  }
 else {
    throw new CLIStatusException("cloud_driver_file_doesnt_exist",StringUtils.join(pathResolver.getPathsLooked().toArray(),", "));
  }
  final File tempFolder=createTempFolder();
  FileUtils.copyDirectoryToDirectory(providerDirectory,tempFolder);
  providerDirectory=new File(tempFolder,providerDirectory.getName());
  final File cloudFile=findCloudFile(providerDirectory);
  final File cloudPropertiesFile=new File(providerDirectory,cloudFile.getName().split("\\.")[0] + DSLUtils.PROPERTIES_FILE_SUFFIX);
  Cloud cloud=null;
  if (cloudOverrides == null) {
    cloud=ServiceReader.readCloud(cloudFile);
  }
 else {
    cloud=ServiceReader.readCloudFromDirectory(providerDirectory.getAbsolutePath(),FileUtils.readFileToString(cloudOverrides));
    final FileAppender appender=new FileAppender(cloudPropertiesFile);
    appender.append("Overrides File Properties",cloudOverrides);
    appender.flush();
  }
  final CloudGridAgentBootstrapper installer=new CloudGridAgentBootstrapper();
  installer.setProviderDirectory(providerDirectory);
  if (this.adminFacade != null) {
    installer.setAdminFacade(this.adminFacade);
  }
 else {
    installer.setAdminFacade((AdminFacade)session.get(Constants.ADMIN_FACADE));
  }
  installer.setVerbose(verbose);
  installer.setCloud(cloud);
  installer.setCloudFile(cloudFile);
  try {
    MachineDetails[] managers=installer.getCloudManagers();
    if (managers.length == 0) {
      return getFormattedMessage(CloudifyErrorMessages.MANAGEMENT_SERVERS_NOT_LOCATED.getName());
    }
    final StringBuilder sb=new StringBuilder();
    final String newline=System.getProperty("line.separator");
    for (    MachineDetails manager : managers) {
      sb.append(getFormattedMessage(CloudifyErrorMessages.MANAGEMENT_SERVERS_DETAILS.getName(),normalizeDetailsString(manager.getMachineId()),normalizeDetailsString(manager.getPrivateAddress()),normalizeDetailsString(manager.getPublicAddress())));
      sb.append(newline);
    }
    return sb.toString();
  }
  finally {
    if (cloudOverrides != null) {
      cloudPropertiesFile.delete();
    }
    FileUtils.deleteDirectory(tempFolder);
    installer.close();
  }
}
