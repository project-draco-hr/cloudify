{
  BucketLifecycleConfiguration.Rule ruleArchiveAndExpire=new BucketLifecycleConfiguration.Rule().withId("Delete cloudFolder archives").withPrefix(this.extractPrefix(bucketFullPath) + ZIP_PREFIX).withExpirationInDays(1).withStatus(BucketLifecycleConfiguration.ENABLED.toString());
  List<BucketLifecycleConfiguration.Rule> rules=new ArrayList<BucketLifecycleConfiguration.Rule>();
  rules.add(ruleArchiveAndExpire);
  BucketLifecycleConfiguration configuration=new BucketLifecycleConfiguration().withRules(rules);
  this.s3client.setBucketLifecycleConfiguration(bucketFullPath,configuration);
  PutObjectRequest putObjectRequest=new PutObjectRequest(bucketFullPath,this.accessKey,file);
  putObjectRequest.setKey(file.getName());
  ObjectMetadata metadata=new ObjectMetadata();
  putObjectRequest.setMetadata(metadata);
  this.s3client.putObject(putObjectRequest);
  S3Object object=this.s3client.getObject(bucketFullPath,file.getName());
  URL generatePresignedObjectURL=this.generatePresignedObjectURL(object.getBucketName(),object.getKey());
  if (logger.isLoggable(Level.FINEST)) {
    logger.finest("Zip uploaded. Limited signed URL: " + generatePresignedObjectURL);
  }
  return generatePresignedObjectURL.toString();
}
