{
  org.openspaces.ui.UserInterface ui=new org.openspaces.ui.UserInterface();
  final List<MetricGroup> metricGroups=userInterface.getMetricGroups();
  final List<org.openspaces.ui.MetricGroup> destMetricGroups=new ArrayList<org.openspaces.ui.MetricGroup>();
  final List<Object> destMetrics=new ArrayList<Object>();
  for (  MetricGroup metricGroup : metricGroups) {
    final org.openspaces.ui.MetricGroup group=new org.openspaces.ui.MetricGroup();
    List<Object> metrics=metricGroup.getMetrics();
    for (    Object metric : metrics) {
      if (metric instanceof List<?>) {
        @SuppressWarnings("unchecked") List<Object> metricDef=(List<Object>)metric;
        String metricName=metricDef.get(0).toString();
        org.openspaces.ui.Unit axisYUnit=getOpenspacesAxisYUnit((Unit)metricDef.get(1));
        final List<Object> destMatrix=new ArrayList<Object>();
        destMatrix.add(metricName);
        destMatrix.add(axisYUnit);
        destMetrics.add(destMatrix);
      }
 else {
        destMetrics.add(metric);
      }
    }
    group.setMetrics(destMetrics);
    group.setName(metricGroup.getName());
    destMetricGroups.add(group);
  }
  final List<WidgetGroup> widgetGroups=userInterface.getWidgetGroups();
  final List<org.openspaces.ui.WidgetGroup> destWidgetGroups=new ArrayList<org.openspaces.ui.WidgetGroup>();
  for (  WidgetGroup widgetGroup : widgetGroups) {
    final org.openspaces.ui.WidgetGroup destGroup=new org.openspaces.ui.WidgetGroup();
    destGroup.setName(widgetGroup.getName());
    destGroup.setTtile(widgetGroup.getTitle());
    final List<Widget> widgets=widgetGroup.getWidgets();
    final List<org.openspaces.ui.Widget> destWidgets=new ArrayList<org.openspaces.ui.Widget>();
    for (    Widget widget : widgets) {
      if (widget instanceof BarLineChart) {
        final org.openspaces.ui.BarLineChart chart=new org.openspaces.ui.BarLineChart();
        final Unit axisYUnit=((BarLineChart)widget).getAxisYUnit();
        org.openspaces.ui.Unit destUnit=getOpenspacesAxisYUnit(axisYUnit);
        chart.setAxisYUnit(destUnit);
        chart.setMetric(((BarLineChart)widget).getMetric());
        destWidgets.add(chart);
      }
 else       if (widget instanceof BalanceGauge) {
        org.openspaces.ui.BalanceGauge gauge=new org.openspaces.ui.BalanceGauge();
        BeanUtils.copyProperties(gauge,widget);
        destWidgets.add(gauge);
      }
 else {
        throw new UnsupportedDataTypeException("widget type: " + widget.getClass().getSimpleName() + " is not supported.");
      }
    }
    destGroup.setWidgets(destWidgets);
    destWidgetGroups.add(destGroup);
  }
  ui.setMetricGroups(destMetricGroups);
  ui.setWidgetGroups(destWidgetGroups);
  return ui;
}
