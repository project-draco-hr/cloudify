{
  final List<String> addedTemplates=new LinkedList<String>();
  final Map<String,String> failedToAddTemplates=new HashMap<String,String>();
  log(Level.FINE,"[addTemplatesToCloudList] - adding " + cloudTemplates.size() + " templates to cloud's list.");
  for (  final ComputeTemplateHolder holder : cloudTemplates) {
    final String templateName=holder.getName();
    final String originalTemplateFileName=holder.getTemplateFileName();
    final Map<String,ComputeTemplate> templates=cloud.getCloudCompute().getTemplates();
    if (templates.containsKey(templateName)) {
      log(Level.WARNING,"[addTemplatesToCloudList] - Template already exists: " + templateName);
      failedToAddTemplates.put(templateName,"template already exists");
      new File(templatesFolder,originalTemplateFileName).delete();
      continue;
    }
    try {
      renameTemplateFilesIfNeeded(templatesFolder,holder);
    }
 catch (    final IOException e) {
      failedToAddTemplates.put(templateName,"failed to rename template's file. error: " + e.getMessage());
      log(Level.WARNING,"[renameTemplateFileIfNeeded] - Failed to rename template's file." + " The file [" + originalTemplateFileName + "] will be deleted.",e);
      new File(templatesFolder,originalTemplateFileName).delete();
      continue;
    }
    final ComputeTemplate cloudTemplate=holder.getCloudTemplate();
    templates.put(templateName,cloudTemplate);
    addedTemplates.add(templateName);
  }
  final AddTemplatesInternalResponse response=new AddTemplatesInternalResponse();
  response.setAddedTempaltes(addedTemplates);
  response.setFailedToAddTempaltesAndReasons(failedToAddTemplates);
  return response;
}
