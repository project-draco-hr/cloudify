{
  final DefaultExecutor executor=new DefaultExecutor();
  final int externalProcessTimeout=(this.timeout + EXTERNAL_PROCESS_WATCHDOG_TIMEOUT) * 1000;
  final ExecuteWatchdog watchdog=new ExecuteWatchdog(externalProcessTimeout);
  executor.setWatchdog(watchdog);
  executor.setExitValue(0);
  int result=-1;
  PipedInputStream in=null;
  PipedOutputStream out=null;
  BufferedReader reader=null;
  try {
    in=new PipedInputStream();
    out=new PipedOutputStream(in);
    reader=new BufferedReader(new InputStreamReader(in));
    final Thread thread=new Thread(new FilteredOutputHandler(reader,this.verbose));
    thread.setDaemon(true);
    thread.start();
    final PumpStreamHandler psh=new PumpStreamHandler(out,out);
    executor.setStreamHandler(psh);
    result=executor.execute(cmdLine,env);
  }
 catch (  final ExecuteException e) {
    logger.log(Level.SEVERE,"A problem was encountered while executing the recipe: " + e.getMessage(),e);
  }
catch (  final IOException e) {
    logger.log(Level.SEVERE,"An IO Exception was encountered while executing the recipe: " + e.getMessage(),e);
    result=-2;
  }
  return result;
}
