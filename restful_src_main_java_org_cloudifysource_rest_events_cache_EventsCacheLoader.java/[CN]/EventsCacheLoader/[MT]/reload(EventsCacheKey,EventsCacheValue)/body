{
  logger.fine(EventsUtils.getThreadId() + "Reloading events cache entry for key " + key);
  Set<GridServiceContainer> containersForDeployment=new HashSet<GridServiceContainer>();
  containersForDeployment.addAll(containerProvider.getContainersForDeployment(key.getDeploymentId()));
  if (containersForDeployment.isEmpty()) {
    containersForDeployment=containerProvider.getContainersForDeployment(key.getDeploymentId());
  }
  if (!containersForDeployment.isEmpty()) {
    int index=oldValue.getLastEventIndex() + 1;
    for (    GridServiceContainer container : containersForDeployment) {
      LogEntryMatcherProviderKey logEntryMatcherProviderKey=createKey(container,key);
      LogEntryMatcher matcher=matcherProvider.get(logEntryMatcherProviderKey);
      LogEntries logEntries=container.logEntries(matcher);
      for (      LogEntry logEntry : logEntries) {
        if (logEntry.isLog()) {
          DeploymentEvent event=EventsUtils.logToEvent(logEntry,logEntries.getHostName(),logEntries.getHostAddress());
          event.setIndex(index++);
          oldValue.getEvents().getEvents().add(event);
        }
      }
    }
    oldValue.setLastRefreshedTimestamp(System.currentTimeMillis());
    oldValue.setLastEventIndex(index - 1);
  }
  return Futures.immediateFuture(oldValue);
}
