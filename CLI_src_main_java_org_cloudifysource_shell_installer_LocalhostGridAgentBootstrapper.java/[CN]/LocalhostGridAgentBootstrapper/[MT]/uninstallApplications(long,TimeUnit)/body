{
  List<String> applicationsList=null;
  boolean applicationsExist=false;
  try {
    if (!adminFacade.isConnected()) {
      throw new CLIException("Failed to fetch applications list. " + "Client is not connected to the rest server.");
    }
    applicationsList=adminFacade.getApplicationsList();
    applicationsExist=applicationsList.size() > 1;
  }
 catch (  final CLIException e) {
    if (!force) {
      throw new CLIStatusException(e,"failed_to_access_rest_before_teardown");
    }
    final String errorMessage="Failed to fetch the currently deployed applications list." + " Continuing teardown-localcloud.";
    if (verbose) {
      logger.log(Level.INFO,errorMessage,e);
    }
 else {
      logger.log(Level.INFO,errorMessage);
    }
    return;
  }
  if (applicationsExist && !force) {
    throw new CLIStatusException("apps_deployed_before_teardown_localcloud",applicationsList.toString());
  }
  for (  final String appName : applicationsList) {
    try {
      if (!appName.equals(MANAGEMENT_APPLICATION)) {
        adminFacade.uninstallApplication(appName);
      }
    }
 catch (    final CLIException e) {
      final String errorMessage="Application " + appName + " faild to uninstall."+ " Continuing teardown-localcloud.";
      if (!force) {
        throw new CLIStatusException(e,"failed_to_uninstall_app_before_teardown",appName);
      }
      if (verbose) {
        logger.log(Level.INFO,errorMessage,e);
      }
 else {
        logger.log(Level.INFO,errorMessage);
      }
    }
  }
  if (applicationsExist) {
    waitForUninstallApplications(timeout,timeunit);
    logger.info(ShellUtils.getMessageBundle().getString("all_apps_removed_before_teardown"));
  }
}
