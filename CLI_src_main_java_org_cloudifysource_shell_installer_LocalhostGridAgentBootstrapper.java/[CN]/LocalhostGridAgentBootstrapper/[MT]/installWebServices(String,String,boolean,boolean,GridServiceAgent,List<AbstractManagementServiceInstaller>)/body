{
  final ManagementWebServiceInstaller webuiInstaller=new ManagementWebServiceInstaller();
  webuiInstaller.setAdmin(agent.getAdmin());
  webuiInstaller.setVerbose(verbose);
  webuiInstaller.setProgress(progressInSeconds,TimeUnit.SECONDS);
  webuiInstaller.setMemory(WEBUI_MEMORY_IN_MB,MemoryUnit.MEGABYTES);
  webuiInstaller.setPort(WEBUI_PORT);
  webuiInstaller.setWarFile(new File(WEBUI_FILE));
  webuiInstaller.setServiceName(WEBUI_NAME);
  webuiInstaller.setManagementZone(MANAGEMENT_ZONE);
  webuiInstaller.addListeners(this.eventsListenersList);
  webuiInstaller.setIsLocalCloud(isLocalCloud);
  webuiInstaller.setIsSecureConnection(isSecureConnection);
  try {
    webuiInstaller.installWebService();
  }
 catch (  final ProcessingUnitAlreadyDeployedException e) {
    if (verbose) {
      logger.fine("Service " + WEBUI_NAME + " already installed");
      publishEvent("Service " + WEBUI_NAME + " already installed");
    }
  }
  if (waitForWebUi) {
    waitForManagementServices.add(webuiInstaller);
  }
 else {
    webuiInstaller.logServiceLocation();
  }
  final ManagementWebServiceInstaller restInstaller=new ManagementWebServiceInstaller();
  restInstaller.setAdmin(agent.getAdmin());
  restInstaller.setProgress(progressInSeconds,TimeUnit.SECONDS);
  restInstaller.setVerbose(verbose);
  restInstaller.setMemory(REST_MEMORY_IN_MB,MemoryUnit.MEGABYTES);
  restInstaller.setPort(REST_PORT);
  restInstaller.setUsername(username);
  restInstaller.setPassword(password);
  restInstaller.setWarFile(new File(REST_FILE));
  restInstaller.setServiceName(REST_NAME);
  restInstaller.setManagementZone(MANAGEMENT_ZONE);
  restInstaller.dependencies.add(CloudifyConstants.MANAGEMENT_SPACE_NAME);
  restInstaller.setWaitForConnection();
  restInstaller.addListeners(this.eventsListenersList);
  restInstaller.setIsLocalCloud(isLocalCloud);
  restInstaller.setIsSecureConnection(isSecureConnection);
  try {
    restInstaller.installWebService();
  }
 catch (  final ProcessingUnitAlreadyDeployedException e) {
    if (verbose) {
      logger.fine("Service " + REST_NAME + " already installed");
      publishEvent("Service " + REST_NAME + " already installed");
    }
  }
  waitForManagementServices.add(restInstaller);
}
