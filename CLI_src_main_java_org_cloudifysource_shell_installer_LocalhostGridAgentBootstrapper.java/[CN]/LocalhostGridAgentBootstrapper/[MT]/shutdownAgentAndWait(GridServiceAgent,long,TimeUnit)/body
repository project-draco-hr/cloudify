{
  final GSA gsa=((InternalGridServiceAgent)agent).getGSA();
  try {
    gsa.shutdown();
  }
 catch (  final RemoteException e) {
    if (!NetworkExceptionHelper.isConnectOrCloseException(e)) {
      logger.log(Level.FINER,"Failed to shutdown GSA",e);
      throw new AdminException("Failed to shutdown GSA",e);
    }
  }
  createConditionLatch(timeout,timeunit).waitFor(new ConditionLatch.Predicate(){
    private boolean messagePublished=false;
    /** 
 * Pings the agent to verify it's not available, indicating it was shut down.
 */
    @Override public boolean isDone() throws CLIException, InterruptedException {
      if (!messagePublished) {
        final String shuttingDownAgentMessage=ShellUtils.getMessageBundle().getString("shutting_down_cloudify_agent_teardown_localcloud");
        publishEvent(shuttingDownAgentMessage);
        final String shuttingDownManagmentMessage=ShellUtils.getMessageBundle().getString("shutting_down_cloudify_managment");
        publishEvent(shuttingDownManagmentMessage);
        messagePublished=true;
      }
      logger.fine("Waiting for agent to shutdown");
      try {
        gsa.ping();
      }
 catch (      final RemoteException e) {
        return true;
      }
      publishEvent(null);
      return false;
    }
  }
);
}
