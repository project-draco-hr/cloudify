{
  Filter newFilter=new Filter(){
    /** 
 * {@inheritDoc}
 */
    @Override public boolean isLoggable(    final LogRecord record){
      boolean isLoggable=true;
      Throwable t=record.getThrown();
      if ((filter != null && !filter.isLoggable(record)) || (t != null && isConnectExceptionOrCause(t) && record.getLevel().intValue() <= Level.WARNING.intValue())) {
        isLoggable=false;
      }
      return isLoggable;
    }
    private boolean isConnectExceptionOrCause(    Throwable t){
      while (t != null) {
        if (isConnectException(t)) {
          return true;
        }
        t=t.getCause();
      }
      return false;
    }
    private boolean isConnectException(    final Throwable t){
      return (t instanceof java.net.ConnectException) || (t instanceof java.rmi.ConnectException);
    }
  }
;
  logger.setFilter(newFilter);
}
