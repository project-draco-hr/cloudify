{
  beforeHandleInvokeMethod(name,arg);
  final Object[] arr=(Object[])arg;
  final Object param=arr[0];
  if (param instanceof Closure<?>) {
    @SuppressWarnings("unchecked") final Closure<Object> closure=(Closure<Object>)param;
    Object retval;
    try {
      retval=dslObject(name);
    }
 catch (    final DSLException e) {
      throw new IllegalArgumentException("Failed to  set: " + name,e);
    }
    if (retval != null) {
      if (this.rootObject == null) {
        this.rootObject=retval;
      }
      swapActiveObject(closure,retval);
      try {
        validateObject(retval);
      }
 catch (      final DSLValidationException e) {
        throw new DSLValidationRuntimeException(e);
      }
      if (this.activeObject != null) {
        try {
          setProperty(name,retval);
        }
 catch (        final IllegalArgumentException e) {
          this.usedProperties.remove(name);
        }
      }
      return retval;
    }
  }
  try {
    if (handleSpecialProperty(name,arg)) {
      return null;
    }
  }
 catch (  final DSLException e) {
    throw new IllegalArgumentException("Failed to set " + name + ": "+ e.getMessage(),e);
  }
  setProperty(name,arg);
  return null;
}
