{
  Object debugAll=Boolean.FALSE;
  if (this.getBinding().hasVariable(DSLUtils.DSL_DEBUG_ALL)) {
    debugAll=this.getBinding().getVariable(DSLUtils.DSL_DEBUG_ALL);
  }
  debugAll=Boolean.TRUE;
  if (debugAll != null && debugAll.equals(Boolean.TRUE)) {
    StringExecutableEntry stringEntry=(StringExecutableEntry)entry;
    ClassLoader loader=this.getClass().getClassLoader();
    try {
      Class<?> clazz=loader.loadClass("org.cloudifysource.debug.DebugHook");
      Constructor<?>[] constructors=clazz.getConstructors();
      Constructor<?> constructor=null;
      for (      Constructor<?> aconstructor : constructors) {
        if (aconstructor.getParameterTypes().length == 2) {
          constructor=aconstructor;
          break;
        }
      }
      if (constructor == null) {
        throw new IllegalStateException("Could not find DebugHook with expected number of parameters");
      }
      ServiceContext context=(ServiceContext)this.getBinding().getProperty("context");
      if (context == null) {
        throw new IllegalStateException("No service context object found in binding");
      }
      final Object debugHookObject=constructor.newInstance(context,"instead");
      final Method debugMethod=clazz.getMethod("debug",String.class);
      final Object retval=debugMethod.invoke(debugHookObject,stringEntry.getCommand());
      if (retval == null) {
        throw new IllegalStateException("DebugHook returned null response");
      }
      final String modifiedCommand=(String)retval;
      stringEntry.setCommand(modifiedCommand);
    }
 catch (    ClassNotFoundException e) {
      throw new IllegalStateException("Could not find DebugHook class in classloader");
    }
catch (    IllegalArgumentException e) {
      throw new IllegalStateException("Failed to set up debug Hook: " + e.getMessage(),e);
    }
catch (    InstantiationException e) {
      throw new IllegalStateException("Failed to set up debug Hook: " + e.getMessage(),e);
    }
catch (    IllegalAccessException e) {
      throw new IllegalStateException("Failed to set up debug Hook: " + e.getMessage(),e);
    }
catch (    InvocationTargetException e) {
      throw new IllegalStateException("Failed to set up debug Hook: " + e.getMessage(),e);
    }
catch (    SecurityException e) {
      throw new IllegalStateException("Failed to set up debug Hook: " + e.getMessage(),e);
    }
catch (    NoSuchMethodException e) {
      throw new IllegalStateException("Failed to set up debug Hook: " + e.getMessage(),e);
    }
  }
}
