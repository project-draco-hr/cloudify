{
  if (this.usedProperties.contains(name)) {
    if (!isDuplicatePropertyAllowed(value))     throw new IllegalArgumentException("Property duplication was found: Property " + name + " is defined more than once.");
  }
  this.usedProperties.add(name);
  if (this.activeObject == null) {
    super.setProperty(name,value);
    return;
  }
  if (value.getClass().isArray()) {
    final Object[] arr=(Object[])value;
    if (arr.length > 1) {
      throw new IllegalArgumentException("Property assignment of field: " + name + " received an array with more then one item: "+ Arrays.toString(arr));
    }
    applyPropertyToObject(this.activeObject,name,arr[0]);
  }
 else {
    applyPropertyToObject(this.activeObject,name,value);
  }
}
