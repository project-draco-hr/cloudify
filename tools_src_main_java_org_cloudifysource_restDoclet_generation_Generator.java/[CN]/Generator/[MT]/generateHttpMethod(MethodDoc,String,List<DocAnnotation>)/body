{
  DocHttpMethod httpMethod=new DocHttpMethod(methodDoc.name(),httpMethodName);
  httpMethod.setDescription(methodDoc.commentText());
  httpMethod.setParams(generateParameters(methodDoc));
  httpMethod.setReturnDetails(generateReturnDetails(methodDoc));
  httpMethod.setJsonResponseExample(Utils.getJsonResponseExampleAnnotation(annotations));
  httpMethod.setJsonRequesteExample(Utils.getJsonRequestExampleAnnotation(annotations));
  DocPossibleResponseStatusesAnnotation possibleResponseStatusesAnnotation=Utils.getPossibleResponseStatusesAnnotation(annotations);
  if (possibleResponseStatusesAnnotation != null) {
    Integer[] codes=possibleResponseStatusesAnnotation.getCodes();
    String[] descriptions=possibleResponseStatusesAnnotation.getDescriptions();
    if (codes == null || descriptions == null || codes.length != descriptions.length)     throw new IllegalArgumentException("In method " + methodDoc.name() + ": wrong attributes for annotation @"+ RestDocConstants.POSSIBLE_RESPONSE_STATUSES_DESCRIPTIONS+ ".");
    httpMethod.setPossibleResponseStatuses(codes,descriptions);
  }
  if (StringUtils.isBlank(httpMethod.getHttpMethodName()))   throw new IllegalArgumentException("method " + methodDoc.name() + " is missing request mapping annotation's method (http method).");
  return httpMethod;
}
