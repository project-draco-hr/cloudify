{
  final InstallationDetails details=new InstallationDetails();
  details.setLocalDir(template.getLocalDirectory());
  final String remoteDir=template.getRemoteDirectory();
  details.setRemoteDir(remoteDir);
  List<String> managementOnlyFiles=new ArrayList<String>(cloud.getProvider().getManagementOnlyFiles());
  if (template.getKeyFile() != null) {
    managementOnlyFiles.add(template.getKeyFile());
  }
  details.setManagementOnlyFiles(managementOnlyFiles);
  details.setManagementOnlyFiles(cloud.getProvider().getManagementOnlyFiles());
  details.setZones(StringUtils.join(zones,",",0,zones.length));
  details.setPrivateIp(md.getPrivateAddress());
  details.setPublicIp(md.getPublicAddress());
  details.setLocator(lookupLocatorsString);
  details.setCloudifyUrl(cloud.getProvider().getCloudifyUrl());
  details.setOverridesUrl(cloud.getProvider().getCloudifyOverridesUrl());
  details.setConnectedToPrivateIp(cloud.getConfiguration().isConnectToPrivateIp());
  details.setAdmin(admin);
  details.setUsername(md.getRemoteUsername());
  details.setPassword(md.getRemotePassword());
  details.setRemoteExecutionMode(md.getRemoteExecutionMode());
  details.setFileTransferMode(md.getFileTransferMode());
  details.setCloudFile(cloudFile);
  details.setLus(isManagement);
  if (isManagement) {
    details.setConnectedToPrivateIp(!cloud.getConfiguration().isBootstrapManagementOnPublicIp());
  }
 else {
    details.setConnectedToPrivateIp(cloud.getConfiguration().isConnectToPrivateIp());
  }
  Set<Entry<String,Object>> customEntries=template.getCustom().entrySet();
  for (  Entry<String,Object> entry : customEntries) {
    if (entry.getKey().startsWith("installer.")) {
      details.getCustomData().put(entry.getKey(),entry.getValue());
    }
  }
  String keyFileName=template.getKeyFile();
  if (keyFileName != null && !keyFileName.isEmpty()) {
    File keyFile=new File(keyFileName);
    if (!keyFile.isAbsolute()) {
      keyFile=new File(details.getLocalDir(),keyFileName);
    }
    if (!keyFile.isFile()) {
      throw new FileNotFoundException("Could not find key file matching specified cloud configuration key file: " + template.getKeyFile() + ". Tried: "+ keyFile+ " but file does not exist");
    }
    details.setKeyFile(keyFile.getAbsolutePath());
  }
  if (template.getHardwareId() != null) {
    details.getExtraRemoteEnvironmentVariables().put(CloudifyConstants.CLOUDIFY_CLOUD_HARDWARE_ID,template.getHardwareId());
  }
  if (template.getImageId() != null) {
    details.getExtraRemoteEnvironmentVariables().put(CloudifyConstants.CLOUDIFY_CLOUD_IMAGE_ID,template.getImageId());
  }
  logger.fine("Created InstallationDetails: " + details);
  return details;
}
