{
  if (timeout < 0) {
    throw new TimeoutException("Starting a new machine timed out");
  }
  long end=System.currentTimeMillis() + unit.toMillis(timeout);
  logger.info("CloudMachineProvisioning: startMachine");
  InstallationDetails details=createInstallationDetails();
  CloudScaleOutTask cloudScaleOutTask=null;
  try {
    cloudScaleOutTask=new CloudScaleOutTask(installer,details,machineNamePrefix,deployer);
  }
 catch (  FileNotFoundException e) {
    throw new ElasticMachineProvisioningException("",e);
  }
  GridServiceAgent agent=null;
  try {
    logger.info("Starting server");
    InstallationDetails[] instDetails=cloudScaleOutTask.startServers(1,timeout,unit);
    details=instDetails[0];
    final AgentlessInstaller installer=new AgentlessInstaller();
    logger.info("installing on new machine");
    installer.installOnMachineWithIP(details,remainingTimeTill(end),TimeUnit.MILLISECONDS);
    logger.info("waiting for agent");
    agent=CloudMachineProvisioning.waitForGridServiceAgent(admin,details.getPrivateIp(),remainingTimeTill(end),TimeUnit.MILLISECONDS);
  }
 catch (  InstallerException e) {
    if (details.getPrivateIp() != null)     try {
      stopMachine(details.getPrivateIp(),"",timeout,unit);
    }
 catch (    Exception ex) {
      logger.log(Level.WARNING,"Error stopping machine " + details.getPrivateIp() + " could be zombie. Stop manually",ex);
    }
    throw new ElasticMachineProvisioningException("error starting new machine",e);
  }
  return agent;
}
