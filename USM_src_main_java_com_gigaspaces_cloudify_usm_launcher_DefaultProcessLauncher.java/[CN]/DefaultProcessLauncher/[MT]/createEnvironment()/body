{
  final Map<String,String> map=new HashMap<String,String>();
  final String groupsProperty=getGroupsProperty();
  map.put("LOOKUPGROUPS",groupsProperty);
  final String locatorsProperty=getLocatorsProperty();
  if (locatorsProperty != null) {
    map.put("LOOKUPLOCATORS",locatorsProperty);
  }
  if (this.clusterInfo == null) {
    logger.warning("ClusterInfo in Process Launcher is null. Child process will have missing environment variables");
  }
 else {
    if (clusterInfo.getName() != null) {
      map.put(CloudifyConstants.USM_ENV_CLUSTER_NAME,clusterInfo.getName());
    }
 else {
      logger.warning("PU Name in ClusterInfo is null. " + "If running in the IntegratedProcessingUnitContainer, this is normal. " + "Using 'USM' instead");
      map.put(CloudifyConstants.USM_ENV_CLUSTER_NAME,"USM");
    }
    map.put(CloudifyConstants.USM_ENV_PU_UNIQUE_NAME,clusterInfo.getUniqueName());
    map.put(CloudifyConstants.USM_ENV_INSTANCE_ID,"" + clusterInfo.getInstanceId());
    map.put(CloudifyConstants.USM_ENV_NUMBER_OF_INSTANCES,"" + clusterInfo.getNumberOfInstances());
    map.put(CloudifyConstants.USM_ENV_RUNNING_NUMBER,"" + clusterInfo.getRunningNumber());
    map.put(CloudifyConstants.USM_ENV_SERVICE_FILE_NAME,"" + ((DSLConfiguration)this.configutaion).getServiceFile().getName());
  }
  if (this.groovyEnvironmentClassPath != null && this.groovyEnvironmentClassPath.length() > 0) {
    map.put("CLASSPATH",this.groovyEnvironmentClassPath);
  }
  if (logger.isLoggable(Level.FINE)) {
    logger.fine("Adding Environment to child process: " + map);
  }
  return map;
}
