{
synchronized (this.stateMutex) {
    this.state=USMState.LAUNCHING;
    usmLifecycleBean.firePreStart(StartReason.DEPLOY);
    final Set<Long> childrenBefore=getChildProcesses(this.myPid);
    usmLifecycleBean.logProcessStartEvent();
    usmLifecycleBean.externalProcessStarted();
    this.process=usmLifecycleBean.getLauncher().launchProcessAsync(usmLifecycleBean.getConfiguration().getStartCommand(),this.puExtDir,getOutputFile(),getErrorFile());
    try {
      Thread.sleep(this.postLaunchWaitPeriodMillis);
    }
 catch (    final InterruptedException e) {
    }
    if (!isProcessAlive(this.process)) {
      logger.severe("Attempt to launch underlying process has failed!");
      if (tailer != null) {
        this.tailer.run();
      }
      throw new USMException("Process has shut down or failed to start. Check logs for errors");
    }
    try {
      logger.info("Executing process liveness test");
      if (!usmLifecycleBean.isProcessLivenessTestPassed()) {
        throw new USMException("The Start Detection test failed! Shutting down this instance.");
      }
      usmLifecycleBean.firePostStart(StartReason.DEPLOY);
    }
  finally {
      findProcessIDs(childrenBefore,null);
    }
    startAsyncTasks();
    this.state=USMState.RUNNING;
    this.stateMutex.notifyAll();
  }
}
